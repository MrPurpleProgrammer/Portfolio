'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _reactRouterDom = require('react-router-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function UploadFormStep4(props) {
    (0, _jquery2.default)(function () {
        (0, _jquery2.default)('.checkbox_Style1_Label').on('click', function () {
            (0, _jquery2.default)(this).parent().find('.checkbox_Style1_Input').prop('checked', true);
            (0, _jquery2.default)(this).toggleClass('checkboxActive');
        });
    });
    return _react2.default.createElement(
        'div',
        { id: 'divUploadForm_Step1', className: 'uploadForm' },
        _react2.default.createElement(
            'div',
            { id: 'divStepExplanation', className: 'stepExplainContainer' },
            _react2.default.createElement(
                'h1',
                null,
                'Treat these documents and passkeys as proof of ownership for this media.'
            ),
            _react2.default.createElement(
                'p',
                null,
                'Let me tell you why. Its because you have initiated a smart contract. This multimedia file is now blockchain certified, the DMCT is a unique non fungible token generated by the blockchain to designate ownership and property. The following information are the unique keys and information required to access and track this media files blockchain tokens.'
            )
        ),
        _react2.default.createElement(
            'div',
            { id: 'divFormStep_4', className: 'uploadFormInputContainer' },
            _react2.default.createElement(
                'div',
                { className: 'uploadFormInput' },
                _react2.default.createElement(
                    'label',
                    null,
                    'Certificate Identification # '
                ),
                _react2.default.createElement('input', { id: 'mediaCID', name: 'mediaCID', type: 'text' })
            ),
            _react2.default.createElement(
                'div',
                { className: 'uploadFormInput' },
                _react2.default.createElement(
                    'label',
                    null,
                    'Asset Identification #'
                ),
                _react2.default.createElement('input', { id: 'mediaAID', name: 'mediaAID' })
            ),
            _react2.default.createElement(
                'div',
                { className: 'uploadFormInput' },
                _react2.default.createElement(
                    'label',
                    null,
                    'IPFS Gateway URL'
                ),
                _react2.default.createElement('input', { id: 'mediaIPFSURL', name: 'mediaIPFSURL' })
            ),
            _react2.default.createElement(
                'div',
                { className: 'uploadFormInput' },
                _react2.default.createElement(
                    'label',
                    null,
                    'Transaction Hash (input this into Ethereum to verify Transaction and Metadata).'
                ),
                _react2.default.createElement('input', { id: 'mediaEtherTransactionHash', name: 'mediaEtherTransactionHash' })
            ),
            _react2.default.createElement(
                'div',
                { className: 'checkbox_Style1' },
                _react2.default.createElement('input', { type: 'checkbox', id: 'storeOptionRecCheck', className: 'checkbox_Style1_Input' }),
                _react2.default.createElement(
                    'label',
                    { htmlFor: 'storeOptionRecCheck', className: 'checkbox_Style1_Label' },
                    'Save this information on Portfolio servers? '
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    'This means we will save the above passkeys on our servers, allowing us to track ownership and media metadata. However this also means, that if there is a security breach within our servers, you may be subject to property theft. '
                )
            ),
            _react2.default.createElement(
                'div',
                { className: 'checkbox_Style1' },
                _react2.default.createElement('input', { type: 'checkbox', id: 'box-2', className: 'checkbox_Style1_Input' }),
                _react2.default.createElement(
                    'label',
                    { htmlFor: 'box-2', className: 'checkbox_Style1_Label' },
                    'Store these passkeys and documents locally by myself.'
                ),
                _react2.default.createElement(
                    'p',
                    null,
                    'This means it is completely your responsibility to ensure the safety and confidentiality of the following passkeys.'
                )
            )
        )
    );
}
exports.default = UploadFormStep4;