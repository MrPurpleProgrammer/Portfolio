{
  "contractName": "DMCTServices",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "DataStoredInTheLog",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "Licenses",
          "type": "uint256[]"
        }
      ],
      "name": "ReturnCertificateLicenses",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "CID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "AID",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "multiHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4",
              "name": "multiHash_Function",
              "type": "bytes4"
            }
          ],
          "indexed": false,
          "internalType": "struct IPFSEngine.IpfsHash",
          "name": "url",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "msgsender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "onwershipHistory",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "licenses",
          "type": "uint256[]"
        }
      ],
      "name": "ReturnCreateCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "portfolio",
          "type": "uint256[]"
        }
      ],
      "name": "ReturnCreateUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "tokenStatus",
          "type": "bool"
        }
      ],
      "name": "ReturnDestroyToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "ReturnMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "Number",
          "type": "uint256[]"
        }
      ],
      "name": "ReturnTestArrayData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "Boolean",
          "type": "bool"
        }
      ],
      "name": "ReturnTestBoolData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Number",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "String",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "Address",
          "type": "address"
        }
      ],
      "name": "ReturnTestData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "ownershipHistory",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "licenses",
          "type": "uint256[]"
        }
      ],
      "name": "ReturnTransferCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "AssetID",
          "type": "uint256"
        }
      ],
      "name": "returnAID",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "CertificateID",
          "type": "uint256"
        }
      ],
      "name": "returnCID",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "LicenseID",
          "type": "uint256"
        }
      ],
      "name": "returnLID",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AssetIDS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "CertificateIDS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "LIDToCID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "LicenseIDS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "bytes8",
          "name": "assetHash",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32",
          "name": "urlHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "urlHash_Function",
          "type": "bytes4"
        }
      ],
      "name": "createCertificate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "assetID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "licenseOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "urlHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "urlHash_Function",
          "type": "bytes4"
        }
      ],
      "name": "createLicense",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "licenseID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "destroyToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "storeDataAsLog",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "storeDataAsString",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "multiHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "multiHash_Function",
          "type": "bytes4"
        }
      ],
      "name": "storeDataAsStruct",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "multiHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4",
              "name": "multiHash_Function",
              "type": "bytes4"
            }
          ],
          "internalType": "struct IPFSEngine.IpfsHash",
          "name": "IpfsHashMemory",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        }
      ],
      "name": "transferCertificte",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnAssetIDS",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "assetIDS",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "returnUserByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "portfolio",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "checkOwnerOfToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "checkTokenStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "checkOwnerStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "licenseID",
          "type": "uint256"
        }
      ],
      "name": "checkLicenseStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "tokenStatus",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "licenseStatus",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        }
      ],
      "name": "returnCertificateURL",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "multiHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4",
              "name": "multiHash_Function",
              "type": "bytes4"
            }
          ],
          "internalType": "struct IPFSEngine.IpfsHash",
          "name": "URL",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "assetID",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        }
      ],
      "name": "returnCertificate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "assetID",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "licenses",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "multiHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4",
              "name": "multiHash_Function",
              "type": "bytes4"
            }
          ],
          "internalType": "struct IPFSEngine.IpfsHash",
          "name": "url",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "ownershipHistory",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "licenseID",
          "type": "uint256"
        }
      ],
      "name": "returnLicense",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "licenseOwner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "multiHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes4",
              "name": "multiHash_Function",
              "type": "bytes4"
            }
          ],
          "internalType": "struct IPFSEngine.IpfsHash",
          "name": "url",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "certificateID",
          "type": "uint256"
        }
      ],
      "name": "returnLicenseOwnerArray",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "ownersArray",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"DataStoredInTheLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"Licenses\",\"type\":\"uint256[]\"}],\"name\":\"ReturnCertificateLicenses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"CID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"AID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"indexed\":false,\"internalType\":\"struct IPFSEngine.IpfsHash\",\"name\":\"url\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgsender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"onwershipHistory\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"licenses\",\"type\":\"uint256[]\"}],\"name\":\"ReturnCreateCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"portfolio\",\"type\":\"uint256[]\"}],\"name\":\"ReturnCreateUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"tokenStatus\",\"type\":\"bool\"}],\"name\":\"ReturnDestroyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ReturnMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"Number\",\"type\":\"uint256[]\"}],\"name\":\"ReturnTestArrayData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"Boolean\",\"type\":\"bool\"}],\"name\":\"ReturnTestBoolData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"String\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"ReturnTestData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"ownershipHistory\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"licenses\",\"type\":\"uint256[]\"}],\"name\":\"ReturnTransferCertificate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"AssetID\",\"type\":\"uint256\"}],\"name\":\"returnAID\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"CertificateID\",\"type\":\"uint256\"}],\"name\":\"returnCID\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"LicenseID\",\"type\":\"uint256\"}],\"name\":\"returnLID\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AssetIDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CertificateIDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LIDToCID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LicenseIDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseID\",\"type\":\"uint256\"}],\"name\":\"checkLicenseStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"tokenStatus\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"licenseStatus\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"checkOwnerOfToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"checkOwnerStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"checkTokenStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"bytes8\",\"name\":\"assetHash\",\"type\":\"bytes8\"},{\"internalType\":\"bytes32\",\"name\":\"urlHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"urlHash_Function\",\"type\":\"bytes4\"}],\"name\":\"createCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"urlHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"urlHash_Function\",\"type\":\"bytes4\"}],\"name\":\"createLicense\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"destroyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnAssetIDS\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"assetIDS\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"}],\"name\":\"returnCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"licenses\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"internalType\":\"struct IPFSEngine.IpfsHash\",\"name\":\"url\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"ownershipHistory\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"}],\"name\":\"returnCertificateURL\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"internalType\":\"struct IPFSEngine.IpfsHash\",\"name\":\"URL\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseID\",\"type\":\"uint256\"}],\"name\":\"returnLicense\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licenseOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"internalType\":\"struct IPFSEngine.IpfsHash\",\"name\":\"url\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"}],\"name\":\"returnLicenseOwnerArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"ownersArray\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"returnUserByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"portfolio\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"storeDataAsLog\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"storeDataAsString\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"name\":\"storeDataAsStruct\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"multiHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"multiHash_Function\",\"type\":\"bytes4\"}],\"internalType\":\"struct IPFSEngine.IpfsHash\",\"name\":\"IpfsHashMemory\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"certificateID\",\"type\":\"uint256\"}],\"name\":\"transferCertificte\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |===     * Requirements:     * - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCTServices.sol\":\"DMCTServices\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/MyData/Projects/Portfolio/dmct/contracts/Artisan.sol\":{\"keccak256\":\"0x55bbc74befee4adb3f77ad02e87d4cbff3f151d27b786332ca8a6c26e10452b7\",\"urls\":[\"bzz-raw://f8c036d4d778c6dd2dcee5db58ebdbfeccb9af85ed39056533c8de80278df5fe\",\"dweb:/ipfs/QmNVbLaC7ZJUuLCCNJpi3GiJrvKnCDKpdp3cvKMxpFFvY5\"]},\"/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCT.sol\":{\"keccak256\":\"0x5d30d11ab3c4ef419390b7c607a11093e3f2f3f27d5b1a38db04809378057d9e\",\"urls\":[\"bzz-raw://6e9d776a44f59be2b45337b5263bc8ebea497844da390a9f4e2c09c43e8ddbfe\",\"dweb:/ipfs/QmdxRWajdwL6auKMknWNN9pshMTbvcii8eLnNrcU93Koy7\"]},\"/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCTServices.sol\":{\"keccak256\":\"0x83d6b83fef386bb5d6f53c8cde5873425dd103a9c9f46c8841364d50cc5d1c30\",\"urls\":[\"bzz-raw://06e032975f33c376afa6dd965a8667c09983ade533ad5508d54f617ce780e24f\",\"dweb:/ipfs/QmcKQ3zDHTEDSiJQFkSyBaNx74xuTs9FP83p45rQAhUbKC\"]},\"/C/MyData/Projects/Portfolio/dmct/contracts/IPFSEngine.sol\":{\"keccak256\":\"0xfc263b633cfe5d024a63301673d1086febee27d58b4ea6249ee17860ea386522\",\"urls\":[\"bzz-raw://47a404e75ce6d1830169977b08694f27d656af850e18b4fbd305e1c42dc371c5\",\"dweb:/ipfs/QmPDt6ZipQpDaek3YUXoP57ffJnPzysiuhpV5Si8Xcfkds\"]},\"/C/MyData/Projects/Portfolio/dmct/contracts/Models.sol\":{\"keccak256\":\"0x8ebef18290efd901bee7ffab817c62be030238527f23608fb190eb98335f6bb3\",\"urls\":[\"bzz-raw://0cdc6e1d9e5a7f19ab1b033accd3eccf7b6a7850c62dcc8f61964443cef42c9b\",\"dweb:/ipfs/QmcuTsQHy2tnLEuNSHQsHQdm5SrSfBb8RWZn8rKS5E6Cns\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xc6fb4c940628ca2cde81ed6d20fc9ff456b60f55aafef555f43a86a2dda7ad9f\",\"urls\":[\"bzz-raw://f17dda58954a84ffca3d53c0b6435bad7f5c42ab3a9c4603db2f1aef00edae4e\",\"dweb:/ipfs/QmehW99QmmzKvnqTsprsApDF7mK2JVo6nnrZ47znhLTFjh\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xaa0e11a791bc975d581a4f5b7a8d9c16a880a354c89312318ae072ae3e740409\",\"urls\":[\"bzz-raw://982d8b344f76193834260436d74c81e5a8f9e89106bb4cd72bbaabda4f3f59c2\",\"dweb:/ipfs/QmSrvP5TkQRhKDVCTpsV3uaKLBhkt7PjUY89vdtM9o5ybK\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6d83564993be2f5220232315a362a2b256afb1956738e2ff67c403f0b118e213\",\"urls\":[\"bzz-raw://c137f3e19171d4d08e8102fbd540a03a9231d0370bc0dfa2a7ffc0eebfe78e22\",\"dweb:/ipfs/QmaQPiTV7PzBwNK7onx6zPnVZN1WngxxbTooRYh3JGeBSF\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xbff8693dd68117a7662eed35ce4deb60786bbd9d621f36f92edb1b86a4578182\",\"urls\":[\"bzz-raw://b80fc44dffeb5d1f478440165be3ffad365f1746c8fa309f2cc899769e482f42\",\"dweb:/ipfs/QmXCCXHKDD5DwiNwxtp482ruc5S95fxM1wWS5i6bELuEf4\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0\",\"urls\":[\"bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f\",\"dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538\",\"urls\":[\"bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127\",\"dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xe82364f234aa24f04c66bef6f7a54b8370131eea1d28298c1dc61083b37a8d12\",\"urls\":[\"bzz-raw://30e1ba760bc71d7c0174d36526f414746841e050e251ec8ddd6ae39eddaeed7b\",\"dweb:/ipfs/QmUDP2GYtx482gcdd9iUUTnfcyh3R6haU5N7mWRh8XjXv2\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x934dbc549a8df514456047ad1c6ab257127a03f4109272834c30e596bbe10d1d\",\"urls\":[\"bzz-raw://33cf247ade00a28c632dfe2c2521e1952f467c6081b89375c34b1eb297441d9b\",\"dweb:/ipfs/QmYGNAHCtN1m3QDynteTeVCfwFZBZRpGJNMjxwVBUifnfB\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b\",\"urls\":[\"bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e\",\"dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"/C/MyData/Projects/Portfolio/dmct/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558\",\"urls\":[\"bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969\",\"dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1488:2:5:-:0;1461:29;;1526:11;1496:41;;;;1543:35;;1606:19;1584:41;;1653:19;1631:41;;-1:-1:-1;848:13:1;;3452:365:11;81:3573:2;3452:365:11;;;;;;;81:3573:2;3452:365:11;;;;;;-1:-1:-1;;;3452:365:11;;751:40:8;-1:-1:-1;;;;;;;;751:18:8;:40;:::i;:::-;3524:12:11;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3546:16:11;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3650:40:11;-1:-1:-1;;;;;;;;3650:18:11;:40;:::i;:::-;3700:49;-1:-1:-1;;;;;;;;3700:18:11;:49;:::i;:::-;3759:51;-1:-1:-1;;;;;;;;3759:18:11;:51;:::i;:::-;-1:-1:-1;865:17:7;;-1:-1:-1;885:12:7;-1:-1:-1;;;;;885:10:7;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:7;-1:-1:-1;;;;;907:18:7;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:7;-1:-1:-1;;940:43:7;;-1:-1:-1;;940:43:7;831:159;81:3573:2;;1482:198:8;-1:-1:-1;;;;;;1565:25:8;;;;;1557:66;;;;-1:-1:-1;;;1557:66:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:8;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:8;1669:4;1633:40;;;1482:198::o;768:104:6:-;855:10;768:104;;:::o;81:3573:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;81:3573:2;;;-1:-1:-1;81:3573:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;342:407:-1;533:2;547:47;;;230:2;518:18;;;860:19;266:30;900:14;;;246:51;316:12;;;504:245;;81:3573:2;;;;;;",
  "deployedSourceMap": "81:3573:2:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:3573:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1088:241:0;;;:::i;:::-;;4723:90:11;;;:::i;:::-;;;;;;;;2998:1109:1;;;;;;;;;:::i;:::-;;;;;;;;9383:209:11;;;;;;;;;:::i;:::-;;;;;;;;8717:381;;;;;;;;;:::i;794:288:0:-;;;;;;;;;:::i;1780:962:2:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7597:200:11;;;:::i;11094:300::-;;;;;;;;;:::i;5876:1458:1:-;;;;;;;;;:::i;7292:152:11:-;;;;;;;;;:::i;640:269:2:-;;;;;;;;;:::i;625:101:3:-;;;;;;;;;:::i;2748:427:2:-;;;;;;;;;:::i;:::-;;;;;;;;;;;12043:149:11;;;;;;;;;:::i;656:27:5:-;;;;;;;;;:::i;8135:161:11:-;;;;;;;;;:::i;234:554:0:-;;;;;;;;;:::i;1836:43:5:-;;;;;;;;;:::i;511:123:2:-;;;;;;;;;:::i;1266:245::-;;;;;;;;;:::i;:::-;;;;;;;;;4451:167:11;;;;;;;;;:::i;233:272:2:-;;;;;;;;;:::i;:::-;;;;;;;;;906:2086:1;;;;;;;;;:::i;:::-;;;;;;;;;6831:87:11;;;:::i;4021:211::-;;;;;;;;;:::i;1689:145:7:-;;;:::i;4113:1757:1:-;;;;;;;;;:::i;1066:77:7:-;;;:::i;1074:186:2:-;;;;;;;;;:::i;4922:94:11:-;;;:::i;915:153:2:-;;;;;;;;;:::i;1517:257::-;;;;;;;;;:::i;:::-;;;;;;;;;9891:290:11;;;;;;;;;:::i;299:271:3:-;;;;;;;;;:::i;:::-;;;;;;;;3181:471:2;;;;;;;;;:::i;:::-;;;;;;;;12915:282:11;;;;;;;;;:::i;5859:740::-;;;;;;;;;:::i;205:86:3:-;;;;;;;;;:::i;689:25:5:-;;;;;;;;;:::i;10503:154:11:-;;;;;;;;;:::i;1983:240:7:-;;;;;;;;;:::i;619:31:5:-;;;;;;;;;:::i;117:110:2:-;;;:::i;:::-;;;;;;;;948:140:8;-1:-1:-1;;;;;;1048:33:8;;1025:4;1048:33;;;;;;;;;;;;;948:140;;;;:::o;1088:241:0:-;1141:10;1180:42;1127:25;;;:13;:25;;;;;;;;:95;;-1:-1:-1;;;;;;1127:95:0;;;1232:39;;;;;;;;;;;;:25;;;;;;;:39;;;;1127:95;1232:34;;;;:39;;:::i;:::-;-1:-1:-1;1281:41:0;;;;;;;;;-1:-1:-1;1281:41:0;;;1295:10;1281:25;;:13;:25;;;;;;;:41;;:35;;;;;:41;;:::i;:::-;;1088:241::o;4723:90:11:-;4801:5;4794:12;;;;;;;;-1:-1:-1;;4794:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4769:13;;4794:12;;4801:5;;4794:12;;4801:5;4794:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4723:90;;:::o;2998:1109:1:-;3198:17;3174:13;2613:2:5;;2607:3;:8;2599:46;;;;-1:-1:-1;;;2599:46:5;;;;;;;;;;;;;;;;;2697:10;2676:17;2689:3;2676:12;:17::i;:::-;-1:-1:-1;;;;;2676:31:5;;2655:118;;;;-1:-1:-1;;;2655:118:5;;;;;;;;;2818:21;;;;:16;:21;;;;;:38;;;-1:-1:-1;;;;;2818:38:5;2804:10;:52;2783:140;;;;-1:-1:-1;;;2783:140:5;;;;;;;;;3297:31:1::1;::::0;;;:16:::1;:31;::::0;;;;:48:::1;;::::0;3239:142:::1;::::0;3270:13;;-1:-1:-1;;;;;3297:48:1::1;3359:12:::0;3239:17:::1;:142::i;:::-;3227:154;;3391:26;;:::i;:::-;-1:-1:-1::0;3420:35:1::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;;3420:35:1;::::1;;::::0;::::1;::::0;3465:22:::1;;:::i;:::-;-1:-1:-1::0;3490:139:1::1;::::0;;::::1;::::0;::::1;::::0;;3511:10:::1;:17:::0;;3490:139;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;3490:139:1;;::::1;::::0;;;;;;;;;;3615:4:::1;3490:139:::0;;;;;;23:18:-1;::::1;45:23:::0;;;3639:26:1;;;::::1;::::0;;;-1:-1:-1;3700:31:1;;;:16:::1;:31:::0;;;;;;;:48:::1;;::::0;3490:139;;3675:106:::1;::::0;3700:48:::1;3542:9:::0;3675:11:::1;:106::i;:::-;3791:31;::::0;;;:16:::1;:31;::::0;;;;;;;:40:::1;::::0;;::::1;27:10:-1::0;;39:1:::1;23:18:::0;;::::1;45:23:::0;;3791:56:1;;;;;;;;::::1;::::0;;;3857:23;;;:12:::1;:23:::0;;;;;:33;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;3857:33:1::1;-1:-1:-1::0;;;;;3857:33:1;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;-1:-1:-1;;3857:33:1::1;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;3857:33:1::1;::::0;::::1;;::::0;;;::::1;::::0;;3914:10:::1;3900:25:::0;;:13:::1;:25:::0;;;;;:35;;::::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;3900:51:1;;;;;;;::::1;::::0;;;3961:19;;;:8:::1;:19:::0;;;;;:35;;;4050:31;;;;;;;4011:89;::::1;::::0;::::1;::::0;::::1;;;;;;;;;;2933:1:5;;2998:1109:1::0;;;;;;;:::o;9383:209:11:-;9451:7;9478:16;9486:7;9478;:16::i;:::-;9470:73;;;;-1:-1:-1;;;9470:73:11;;;;;;;;;-1:-1:-1;9561:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;9561:24:11;;9383:209::o;8717:381::-;8797:13;8813:16;8821:7;8813;:16::i;:::-;8797:32;;8853:5;-1:-1:-1;;;;;8847:11:11;:2;-1:-1:-1;;;;;8847:11:11;;;8839:57;;;;-1:-1:-1;;;8839:57:11;;;;;;;;;8931:5;-1:-1:-1;;;;;8915:21:11;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8915:21:11;;:62;;;;8940:37;8957:5;8964:12;:10;:12::i;8940:37::-;8907:152;;;;-1:-1:-1;;;8907:152:11;;;;;;;;;9070:21;9079:2;9083:7;9070:8;:21::i;:::-;8717:381;;;:::o;794:288:0:-;890:10;876:25;;;;:13;:25;;;;;:37;-1:-1:-1;;;;;876:37:0;855:165;;;;-1:-1:-1;;;855:165:0;;;;;;;;;1044:10;1030:25;;;;:13;:25;;;;;;;;:45;;;;:34;;;;;:45;;;;:::i;:::-;;794:288;:::o;1780:962:2:-;1888:13;1915:15;1950:25;1989:19;;:::i;:::-;2055:15;2202:31;;;:16;:31;;;;;;;;:37;;2259:39;;;;2319:40;;;;2308:51;;;;;;;;;;;;;;;;;2202:37;;-1:-1:-1;2259:39:2;;-1:-1:-1;2022:19:2;;2055:15;;;2022:19;;2055:15;;2308:51;;2319:40;;2308:51;;;2319:40;2308:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2375:16;:31;2392:13;2375:31;;;;;;;;;;;:35;;2369:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2369:41:2;;-1:-1:-1;;;;;2369:41:2;;;;;;;;2428:16;:31;2445:13;2428:31;;;;;;;;;;;:37;;2420:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2485:31:2;;;;:16;:31;;;;;;;;;:50;;;;2553:48;;;;2630;;;;2611:67;;;;;;;;;;;;;;;;;2420:45;;-1:-1:-1;;;;;;2485:50:2;;;;-1:-1:-1;2553:48:2;;;-1:-1:-1;2611:67:2;;2630:48;;-1:-1:-1;2611:67:2;;-1:-1:-1;2611:67:2;;2630:48;2611:67;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2611:67:2;;;;;;;;;;;;;;;;-1:-1:-1;;;2697:31:2;;;;-1:-1:-1;;2697:16:2;:31;;;;;;:38;;;1780:962;;;;;;;;;;;;;;2697:38;;;;;1780:962;-1:-1:-1;;1780:962:2:o;7597:200:11:-;7650:7;7769:21;:12;:19;:21::i;:::-;7762:28;;7597:200;:::o;11094:300::-;11253:41;11272:12;:10;:12::i;:::-;11286:7;11253:18;:41::i;:::-;11245:103;;;;-1:-1:-1;;;11245:103:11;;;;;;;;;11359:28;11369:4;11375:2;11379:7;11359:9;:28::i;5876:1458:1:-;5967:13;2613:2:5;;2607:3;:8;2599:46;;;;-1:-1:-1;;;2599:46:5;;;;;;;;;2697:10;2676:17;2689:3;2676:12;:17::i;:::-;-1:-1:-1;;;;;2676:31:5;;2655:118;;;;-1:-1:-1;;;2655:118:5;;;;;;;;;2818:21;;;;:16;:21;;;;;:38;;;-1:-1:-1;;;;;2818:38:5;2804:10;:52;2783:140;;;;-1:-1:-1;;;2783:140:5;;;;;;;;;6013:44:1::1;6031:10;6043:13;6013:17;:44::i;:::-;:52;;6061:4;6013:52;5992:150;;;;-1:-1:-1::0;;;5992:150:1::1;;;;;;;;;6176:2;;6160:13;:18;6152:59;;;;-1:-1:-1::0;;;6152:59:1::1;;;;;;;;;6242:31;::::0;;;:16:::1;:31;::::0;;;;:48:::1;;::::0;-1:-1:-1;;;;;6242:54:1;;::::1;:48:::0;::::1;:54;;6221:140;;;;-1:-1:-1::0;;;6221:140:1::1;;;;;;;;;6392:31;::::0;;;:16:::1;:31;::::0;;;;:38:::1;;::::0;::::1;;:46;;:38:::0;:46:::1;6371:119;;;;-1:-1:-1::0;;;6371:119:1::1;;;;;;;;;6500:44;6514:10;6526:2;6530:13;6500;:44::i;:::-;6554:31;::::0;;;:16:::1;:31;::::0;;;;;;:48:::1;::::0;::::1;:53:::0;;-1:-1:-1;;;;;6554:53:1;::::1;-1:-1:-1::0;;;;;;6554:53:1;;::::1;::::0;::::1;::::0;;;6617:48:::1;::::0;::::1;27:10:-1::0;;6554:53:1;23:18:-1;::::1;45:23:::0;;6617:57:1;;;;;;;;::::1;::::0;;;;::::1;;::::0;;;6688:31;;;;:40:::1;;:47:::0;:51;6684:352:::1;;6755:271;6767:31;::::0;;;:16:::1;:31;::::0;;;;:40:::1;;:47:::0;6762:1:::1;::::0;-1:-1:-1;;6767:51:1;;;-1:-1:-1;6755:271:1::1;;6838:152;6873:10;6905:2;6929:16;:31;6946:13;6929:31;;;;;;;;;;;:40;;6970:1;;6929:43;;;;;;;;;;;;;;;;6838:13;:152::i;:::-;7008:1;:3:::0;;::::1;;::::0;;6755:271:::1;;;7089:31;::::0;;;:16:::1;:31;::::0;;;;;;:50:::1;::::0;::::1;::::0;7153:48:::1;::::0;::::1;::::0;7050:277;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;7089:50:1;;::::1;::::0;7153:48;;::::1;::::0;7215::::1;::::0;::::1;::::0;7277:40:::1;;::::0;7050:277:::1;;;;;;;;;;5876:1458:::0;;;:::o;7292:152:11:-;-1:-1:-1;;;;;7407:20:11;;7381:7;7407:20;;;:13;:20;;;;;:30;;7431:5;7407:30;:23;:30;:::i;:::-;7400:37;;7292:152;;;;;:::o;640:269:2:-;729:13;772:2;;762:7;:12;758:145;;;-1:-1:-1;798:21:2;;;;:12;:21;;;;;:34;;;-1:-1:-1;;;;;798:34:2;758:145;;;871:21;884:7;871:12;:21::i;625:101:3:-;693:25;712:5;693:25;;;;;;;;;;;;;;;625:101;:::o;2748:427:2:-;2848:13;2875:20;2909:19;;:::i;:::-;-1:-1:-1;;;2942:11:2;2986:23;;;:12;:23;;;;;;;;:29;;3040:36;;;;3086:33;;;;;;;;3092:27;;;3086:33;;;;;;;;;-1:-1:-1;;;;;;3086:33:2;;;;;3138:23;;;;;;;;:30;;;;;2986:29;;-1:-1:-1;;;;;3040:36:2;;;;3086:33;;3138:30;;;2748:427::o;12043:149:11:-;12146:39;12163:4;12169:2;12173:7;12146:39;;;;;;;;;;;;:16;:39::i;656:27:5:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;656:27:5;:::o;8135:161:11:-;8202:7;;8243:22;:12;8259:5;8243:22;:15;:22;:::i;:::-;-1:-1:-1;8221:44:11;8135:161;-1:-1:-1;;;8135:161:11:o;234:554:0:-;330:10;316:25;;;;:13;:25;;;;;:37;-1:-1:-1;;;;;316:37:0;:99;295:169;;;;-1:-1:-1;;;295:169:0;;;;;;;;;502:90;;;;;;;;520:10;502:90;;;;;;;;;;566:16;;-1:-1:-1;566:16:0;;;;;;;;502:90;;;;;;;474:25;;;:13;:25;;;;;;:118;;;;-1:-1:-1;;;;;;474:118:0;-1:-1:-1;;;;;474:118:0;;;;;;;;;;502:90;;474:25;:118;;-1:-1:-1;474:118:0;;;;;;:::i;:::-;-1:-1:-1;474:118:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;651:10:0;637:25;;;;:13;:25;;;;;;;:37;;607:174;;;;-1:-1:-1;607:174:0;;-1:-1:-1;;;;;637:37:0;;;688:34;;;736:35;;;;;607:174;;1836:43:5;;;;;;;;;;;;;:::o;511:123:2:-;569:15;606:21;621:5;606:14;:21::i;1266:245::-;1358:16;1376:18;1424:24;1438:9;1424:13;:24::i;:::-;1474:23;;;;:12;:23;;;;;;:30;;;1410:38;;1474:30;;;;;1266:245;-1:-1:-1;;1266:245:2:o;4451:167:11:-;4515:7;4541:70;4558:7;4541:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;233:272:2:-;-1:-1:-1;;;;;405:26:2;;;;;;:13;:26;;;;;;;;;:35;;;;394:46;;;;;;;;;;;-1:-1:-1;;394:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;328:22;;;;394:46;;405:35;394:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:13;:26;476:11;-1:-1:-1;;;;;462:26:2;-1:-1:-1;;;;;462:26:2;;;;;;;;;;;;:36;;450:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:272;;;:::o;906:2086:1:-;1068:21;1091:15;1118:23;;:::i;:::-;1151:27;;;-1:-1:-1;;;;;;1188:45:1;;:26;;;:45;1253:35;1269:9;1151:7;1253:15;:35::i;:::-;1243:45;;1298:408;1309:8;:15;1305:1;;:19;1298:408;;;1340:19;;:::i;:::-;1362:10;:23;1373:8;1382:1;;1373:11;;;;;;;;;;;;;;;;;;;;;1362:23;;;;;;;;;;;;;;;1340:45;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1340:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1340:45:1;;;;;;;;;;;;1416:1;;1407:8;:11;;1340:45;;-1:-1:-1;1422:7:1;;1407:8;;1416:1;1407:11;;;;;;;;;;;;;;:22;;1399:57;;;;-1:-1:-1;;;1399:57:1;;;;;;;;;1498:9;-1:-1:-1;;;;;1478:29:1;;:6;:16;;;-1:-1:-1;;;;;1478:29:1;;;;1470:66;;;;-1:-1:-1;;;1470:66:1;;;;;;;;;1604:17;;1575:15;;;;:25;:46;;1550:128;;;;-1:-1:-1;;;1550:128:1;;;;;;;;;-1:-1:-1;1692:1:1;:3;;;;;;1298:408;;;1731:42;1753:7;1762:10;1731:21;:42::i;:::-;1783:17;;;;:8;:17;;;;;:33;;;1826:8;27:10:-1;;39:1;23:18;;45:23;;1826:22:1;;;;;;;;;;;1879:15;1715:58;;-1:-1:-1;;;1879:19:1;1908:18;;:::i;:::-;-1:-1:-1;1929:46:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1929:46:1;;;;;;;;;;;;;;-1:-1:-1;1985:19:1;;;:10;:19;;;;;:27;;;;;;;;;;;;;;;;;-1:-1:-1;;1985:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1985:27:1;;;;;;;;;;;;;2022:28;;;:13;:28;;;;;;;:41;;;2073:30;;:::i;:::-;2106:270;;;;;;;;2131:14;:21;2106:270;;;;;;;;;;;;;;;2214:16;;-1:-1:-1;2214:16:1;;;;;;;;;2106:270;;;;;;-1:-1:-1;2106:270:1;;;;;;;;;;;;;;;;2284:10;2106:270;;;;;;;;;;2332:16;;-1:-1:-1;2332:16:1;;;;;;;;;2106:270;;;;;2332:16;-1:-1:-1;2106:270:1;;2362:4;2106:270;;;;;;;2386:14;27:10:-1;;23:18;;;45:23;;;2386:34:1;;;;;2106:270;2430:31;;;:16;:31;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:303;;-1:-1:-1;2073:303:1;;2430:31;;:45;;;;;;;;;;;:::i;:::-;-1:-1:-1;2430:45:1;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2430:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2430:45:1;;;;;;;;;-1:-1:-1;;;;;2430:45:1;;;-1:-1:-1;;;;;;2430:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2430:45:1;;;;;;;;;;;;-1:-1:-1;;2430:45:1;;;;;;;;;;-1:-1:-1;2485:31:1;;;:16;:31;;;;;;;;:48;;27:10:-1;;-1:-1;23:18;;;45:23;;2485:65:1;;;;;;;;;2539:10;-1:-1:-1;;;;;;2485:65:1;;;;;;;;2560:25;;;:13;:25;;;;;:35;;27:10:-1;;23:18;;;45:23;;2560:55:1;;;;;;;;;;2647:38;;2485:31;2647:11;:38::i;:::-;2737:17;;2768:25;;;;;2737:17;2873:31;;;:16;:31;;;;;;;;2700:285;;;;;;2737:17;;2768:25;2807:7;;2828;;2849:10;;2873:48;;;;2935:40;;;;;2700:285;;;;;;;;;;906:2086;;;;;;;;;;;:::o;6831:87:11:-;6903:8;6896:15;;;;;;;;-1:-1:-1;;6896:15:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6871:13;;6896:15;;6903:8;;6896:15;;6903:8;6896:15;;;;;;;;;;;;;;;;;;;;;;;;4021:211;4085:7;-1:-1:-1;;;;;4112:19:11;;4104:74;;;;-1:-1:-1;;;4104:74:11;;;;;;;;;-1:-1:-1;;;;;4196:20:11;;;;;;:13;:20;;;;;:29;;:27;:29::i;1689:145:7:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:7::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:7::1;::::0;;1689:145::o;4113:1757:1:-;4184:2;;4173:7;:13;4169:1695;;4202:850;4231:35;4248:17;;;:8;:17;;;;;;;;;4231:35;;:16;:35;;;;;:44;;:51;4226:1;;-1:-1:-1;;4231:55:1;;;-1:-1:-1;4202:850:1;;4344:35;4361:17;;;:8;:17;;;;;;;;;4344:35;;:16;:35;;;;;4389:1;;4344:44;;;;:47;;4395:7;;4389:1;4344:47;;;;;;;;;;;;;;:58;4319:698;;;4518:35;4535:17;;;:8;:17;;;;;;;;;4518:35;;:16;:35;;;;;:69;;4588:101;;-1:-1:-1;;4588:105:1;;;4518:176;;;;;;;;;;;;;;4443:16;:35;4460:8;:17;4469:7;4460:17;;;;;;;;;;;;4443:35;;;;;;;;;;;:69;;4513:1;;4443:72;;;;;;;;;;;;;;;;;;;;:251;;;;4740:17;;;:8;:17;;;;;;;4723:35;;:16;:35;;;;:69;;4793:101;;-1:-1:-1;;4793:105:1;;;4723:176;;;;;;;;;;;;;;;;;4716:183;;;4938:17;;;:8;:17;;;;;;;4921:35;;:16;:35;;;;;:44;;:50;;;;;;;;;;;;;;;;;;;;;;;;4993:5;;4319:698;5034:1;:3;;;;;;4202:850;;;5096:5;5065:21;;;:12;:21;;;;;:28;;:36;;-1:-1:-1;;5065:36:1;;;5115:32;5127:10;5078:7;5115:11;:32::i;:::-;5166:42;5185:22;5199:7;5185:13;:22::i;:::-;5166:42;;;;;;;;;;;;;;;4169:1695;;;5239:13;5255:22;;;:13;:22;;;;;;5314:8;5323:15;;5255:22;;5239:13;5305:8;;5239:13;;-1:-1:-1;;5323:19:1;;;5314:29;;;;;;;;;;;;;;5305:39;;;;;;;;;;;;5291:53;;5406:3;5361:14;5400:1;5376:14;:21;;;;:25;5361:41;;;;;;;;;;;;;;;;:48;5358:156;;5434:65;;;;;;;;;;;;;;;5358:156;5545:8;5554:15;;-1:-1:-1;;5554:19:1;;;5545:29;;;;;;;;;;;;;;5527:8;5536:5;5527:15;;;;;;;;;;;;;;;;;;;:47;;;;5588:18;;;:13;:18;;;;;;:26;;;5635:8;5644:15;;-1:-1:-1;;5644:19:1;;;5635:29;;;;;;;;;;;;;;5628:36;5678:8;:14;;;;;;;;;;;;;;;;;-1:-1:-1;;5678:14:1;;;;;;;;;;;;5706:25;;;:16;:25;;;;;:32;;:40;;-1:-1:-1;;5706:40:1;;;5760:32;5772:10;5723:7;5760:11;:32::i;:::-;5811:42;5830:22;5844:7;5830:13;:22::i;:::-;5811:42;;;;;;;1066:77:7;1130:6;;-1:-1:-1;;;;;1130:6:7;1066:77;:::o;1074:186:2:-;1177:11;1213:40;1238:5;1245:7;1213:24;:40::i;4922:94:11:-;5002:7;4995:14;;;;;;;;-1:-1:-1;;4995:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4970:13;;4995:14;;5002:7;;4995:14;;5002:7;4995:14;;;;;;;;;;;;;;;;;;;;;;;;915:153:2;1003:11;1039:22;1053:7;1039:13;:22::i;1517:257::-;1615:19;;:::i;:::-;-1:-1:-1;1636:15:2;1673:31;;;:16;:31;;;;;;;;1667:41;;;;;;;;1673:35;;;1667:41;;;;;;;;;-1:-1:-1;;;;;;1667:41:2;;;;;1728:31;;;;;:39;;;;;1667:41;;1517:257::o;9891:290:11:-;10005:12;:10;:12::i;:::-;-1:-1:-1;;;;;9993:24:11;:8;-1:-1:-1;;;;;9993:24:11;;;9985:62;;;;-1:-1:-1;;;9985:62:11;;;;;;;;;10103:8;10058:18;:32;10077:12;:10;:12::i;:::-;-1:-1:-1;;;;;10058:32:11;;;;;;;;;;;;;;;;;-1:-1:-1;10058:32:11;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;10058:53:11;;;;;;;;;;;10141:12;:10;:12::i;:::-;-1:-1:-1;;;;;10126:48:11;;10165:8;10126:48;;;;;;;;;;;;;;;9891:290;;:::o;299:271:3:-;418:30;;:::i;:::-;461:36;;;-1:-1:-1;;;;;;508:54:3;:33;;;:54;461:14;299:271::o;3181:471:2:-;3326:20;3349:31;;;:16;:31;;;;;;;;;:40;;:47;3420:27;;;;;;;;;;;;;;;;3282:28;;3349:47;;3420:27;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3420:27:2;-1:-1:-1;3406:41:2;-1:-1:-1;3462:9:2;3457:189;3481:12;3477:1;:16;3457:189;;;3531:74;3544:31;;;:16;:31;;;;;:57;;:60;;3531:12;;:74;3544:57;3602:1;;3544:60;;;;;;;;;;;;;;3531:74;;;;;;;;;;;:104;;;;;;;;;;-1:-1:-1;;;;;3531:104:2;3514:11;3526:1;3514:14;;;;;;;;-1:-1:-1;;;;;3514:121:2;;;:14;;;;;;;;;;;:121;3495:3;;3457:189;;;;3181:471;;;;:::o;12915:282:11:-;13046:41;13065:12;:10;:12::i;:::-;13079:7;13046:18;:41::i;:::-;13038:103;;;;-1:-1:-1;;;13038:103:11;;;;;;;;;13151:39;13165:4;13171:2;13175:7;13184:5;13151:13;:39::i;:::-;12915:282;;;;:::o;5859:740::-;5924:13;5957:16;5965:7;5957;:16::i;:::-;5949:76;;;;-1:-1:-1;;;5949:76:11;;;;;;;;;6062:19;;;;:10;:19;;;;;;;;;6036:45;;;;;;-1:-1:-1;;6036:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;6062:19;6036:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6160:8:11;6154:22;6036:45;;-1:-1:-1;;;;6154:22:11;-1:-1:-1;;6154:22:11;;;;;;;;;;;6150:74;;6204:9;-1:-1:-1;6197:16:11;;6150:74;6326:23;;:27;6322:110;;6400:8;6410:9;6383:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6383:37:11;;;6369:52;;;;;6322:110;6562:8;6572:18;:7;:16;:18::i;:::-;6545:46;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6545:46:11;;;6531:61;;;5859:740;;;:::o;205:86:3:-;271:12;;;;:4;;:12;;;;;:::i;689:25:5:-;;;;;;;;;;10503:154:11;-1:-1:-1;;;;;10615:25:11;;;10592:4;10615:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;10503:154::o;1983:240:7:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;-1:-1:-1;;;;;2071:22:7;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:7::1;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:7;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:7::1;-1:-1:-1::0;;;;;2199:17:7;;;::::1;::::0;;;::::1;::::0;;1983:240::o;619:31:5:-;;;;;;;;;;117:110:2;164:25;212:8;201:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:110;:::o;5135:152:5:-;5221:13;5258:22;5272:7;5258:13;:22::i;3618:306::-;3767:17;3808:109;3821:2;;3905:10;;3834:67;3858:13;3872:14;3887:12;3841:59;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;3841:59:5;;;;3834:67;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3834:67:5;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3834:67:5;;;;;;;;;3826:89;;;;;;3808:12;:109::i;:::-;3796:121;3618:306;-1:-1:-1;;;;3618:306:5:o;4215:89::-;4275:22;4287:5;4294:2;4275:11;:22::i;14366:117:11:-;14423:4;14446:30;:12;14468:7;14446:30;:21;:30;:::i;768:104:6:-;855:10;768:104;:::o;21390:155:11:-;21455:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;21455:29:11;-1:-1:-1;;;;;21455:29:11;;;;;;;;:24;;21508:16;21455:24;21508:7;:16::i;:::-;-1:-1:-1;;;;;21499:39:11;;;;;;;;;;;21390:155;;:::o;7023:121:17:-;7092:7;7118:19;7126:3;7118:7;:19::i;14844:329:11:-;14929:4;14953:16;14961:7;14953;:16::i;:::-;14945:73;;;;-1:-1:-1;;;14945:73:11;;;;;;;;;15028:13;15044:16;15052:7;15044;:16::i;:::-;15028:32;;15089:5;-1:-1:-1;;;;;15078:16:11;:7;-1:-1:-1;;;;;15078:16:11;;:51;;;;15122:7;-1:-1:-1;;;;;15098:31:11;:20;15110:7;15098:11;:20::i;:::-;-1:-1:-1;;;;;15098:31:11;;15078:51;:87;;;;15133:32;15150:5;15157:7;15133:16;:32::i;18356:559::-;18473:4;-1:-1:-1;;;;;18453:24:11;:16;18461:7;18453;:16::i;:::-;-1:-1:-1;;;;;18453:24:11;;18445:78;;;;-1:-1:-1;;;18445:78:11;;;;;;;;;-1:-1:-1;;;;;18541:16:11;;18533:65;;;;-1:-1:-1;;;18533:65:11;;;;;;;;;18609:39;18630:4;18636:2;18640:7;18609:20;:39::i;:::-;18710:29;18727:1;18731:7;18710:8;:29::i;:::-;-1:-1:-1;;;;;18750:19:11;;;;;;:13;:19;;;;;:35;;18777:7;18750:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;18795:17:11;;;;;;:13;:17;;;;;:30;;18817:7;18795:30;:21;:30;:::i;:::-;-1:-1:-1;18836:29:11;:12;18853:7;18862:2;18836:29;:16;:29;:::i;:::-;;18900:7;18896:2;-1:-1:-1;;;;;18881:27:11;18890:4;-1:-1:-1;;;;;18881:27:11;;;;;;;;;;;18356:559;;;:::o;4682:193:5:-;4790:11;4826:42;4851:6;4859:8;4826:24;:42::i;4513:163::-;4628:41;4651:4;4657:2;4661:7;4628:22;:41::i;7649:135:18:-;7720:7;7754:22;7758:3;7770:5;7754:3;:22::i;7472:224:17:-;7552:7;;;;7611:22;7615:3;7627:5;7611:3;:22::i;:::-;7580:53;;;;-1:-1:-1;7472:224:17;-1:-1:-1;;;;;7472:224:17:o;4881:123:5:-;4936:16;4975:22;4991:5;4975:15;:22::i;5010:119::-;5067:11;5099:23;5113:8;5099:13;:23::i;8115:202:17:-;8222:7;8264:44;8269:3;8289;8295:12;8264:4;:44::i;:::-;8256:53;-1:-1:-1;8115:202:17;;;;;;:::o;3353:259:5:-;3468:15;3509:96;3522:2;;3593:10;;3535:54;3559:9;3570:7;:17;;;3542:46;;;;;;;;;;3930:256;4042:21;4095:84;4108:2;;4167:10;;4121:42;4145:7;4154;4128:34;;;;;;;;;;4310:197;4383:33;4401:5;4408:7;4383:17;:33::i;:::-;:41;;4420:4;4383:41;4375:95;;;;-1:-1:-1;;;4375:95:5;;;;;;;;;4480:20;4492:7;4480:11;:20::i;13902:269:11:-;14015:28;14025:4;14031:2;14035:7;14015:9;:28::i;:::-;14061:48;14084:4;14090:2;14094:7;14103:5;14061:22;:48::i;:::-;14053:111;;;;-1:-1:-1;;;14053:111:11;;;;;;;;202:723:19;258:13;475:10;471:51;;-1:-1:-1;501:10:19;;;;;;;;;;;;-1:-1:-1;;;501:10:19;;;;;;471:51;546:5;531:12;585:75;592:9;;585:75;;617:8;;647:2;639:10;;;;585:75;;;669:19;701:6;691:17;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;691:17:19;87:34:-1;135:17;;-1:-1;691:17:19;-1:-1:-1;761:5:19;;-1:-1:-1;669:39:19;-1:-1:-1;;;734:10:19;;776:112;783:9;;776:112;;849:2;842:4;:9;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;-1:-1:-1;;;;;808:45:19;;;;;;;;-1:-1:-1;875:2:19;867:10;;;;776:112;;;-1:-1:-1;911:6:19;202:723;-1:-1:-1;;;;202:723:19:o;867:176:10:-;925:7;956:5;;;979:6;;;;971:46;;;;-1:-1:-1;;;971:46:10;;;;;;;;16903:393:11;-1:-1:-1;;;;;16982:16:11;;16974:61;;;;-1:-1:-1;;;16974:61:11;;;;;;;;;17054:16;17062:7;17054;:16::i;:::-;17053:17;17045:58;;;;-1:-1:-1;;;17045:58:11;;;;;;;;;17114:45;17143:1;17147:2;17151:7;17114:20;:45::i;:::-;-1:-1:-1;;;;;17170:17:11;;;;;;:13;:17;;;;;:30;;17192:7;17170:30;:21;:30;:::i;:::-;-1:-1:-1;17211:29:11;:12;17228:7;17237:2;17211:29;:16;:29;:::i;:::-;-1:-1:-1;17256:33:11;;17281:7;;-1:-1:-1;;;;;17256:33:11;;;17273:1;;17256:33;;17273:1;;17256:33;16903:393;;:::o;6791:149:17:-;6875:4;6898:35;6908:3;6928;6898:9;:35::i;4483:108::-;4565:19;;4483:108::o;6764:135:18:-;6834:4;6857:35;6865:3;6885:5;6857:7;:35::i;6467:129::-;6534:4;6557:32;6562:3;6582:5;6557:4;:32::i;6239:174:17:-;6328:4;6351:55;6356:3;6376;-1:-1:-1;;;;;6390:14:17;;6351:4;:55::i;4423:201:18:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:18;;;;-1:-1:-1;;;4509:73:18;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;4934:274:17:-;5037:19;;5001:7;;;;5037:27;-1:-1:-1;5029:74:17;;;;-1:-1:-1;;;5029:74:17;;;;;;;;;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;5615:315::-;5709:7;5747:17;;;:12;;;:17;;;;;;5797:12;5782:13;5774:36;;;;-1:-1:-1;;;5774:36:17;;;;;;;;;;;5863:3;:12;;5887:1;5876:8;:12;5863:26;;;;;;;;;;;;;;;;;;:33;;;5856:40;;;5615:315;;;;;:::o;17477:502:11:-;17536:13;17552:16;17560:7;17552;:16::i;:::-;17536:32;;17579:48;17600:5;17615:1;17619:7;17579:20;:48::i;:::-;17665:29;17682:1;17686:7;17665:8;:29::i;:::-;17750:19;;;;:10;:19;;;;;17744:33;;-1:-1:-1;;17744:33:11;;;;;;;;;;;:38;17740:95;;17805:19;;;;:10;:19;;;;;17798:26;;;:::i;:::-;-1:-1:-1;;;;;17845:20:11;;;;;;:13;:20;;;;;:36;;17873:7;17845:36;:27;:36;:::i;:::-;-1:-1:-1;17892:28:11;:12;17912:7;17892:28;:19;:28;:::i;:::-;-1:-1:-1;17936:36:11;;17964:7;;17960:1;;-1:-1:-1;;;;;17936:36:11;;;;;17960:1;;17936:36;17477:502;;:::o;20334:1050::-;20454:4;20479:15;:2;-1:-1:-1;;;;;20479:13:11;;:15::i;:::-;20474:58;;-1:-1:-1;20517:4:11;20510:11;;20474:58;20601:12;20615:23;-1:-1:-1;;;;;20642:7:11;;-1:-1:-1;;;20745:12:11;:10;:12::i;:::-;20771:4;20789:7;20810:5;20650:175;;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;20650:175:11;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;20650:175:11;;;179:29:-1;;;;160:49;;;20642:184:11;;;;20650:175;20642:184;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;20600:226:11;;;;20841:7;20836:542;;20868:17;;:21;20864:376;;21033:10;21027:17;21093:15;21080:10;21076:2;21072:19;21065:44;20982:145;21165:60;;-1:-1:-1;;;21165:60:11;;;;;;;;20836:542;21270:13;21297:10;21286:32;;;;;;;;;;;;;;-1:-1:-1;;;;;;21340:26:11;-1:-1:-1;;;21340:26:11;;-1:-1:-1;21332:35:11;;-1:-1:-1;;;21332:35:11;4270:123:17;4341:4;4364:17;;;:12;;;;;:17;;;;;;:22;;;4270:123::o;2183:1512:18:-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:18;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1611:404;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:18;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:18;1986:12;;1828:678:17;1904:4;2037:17;;;:12;;;:17;;;;;;2069:13;2065:435;;-1:-1:-1;;2153:38:17;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;2135:12:17;:57;;;;;;;;;;;;;;;;;;;;;;;;2347:19;;2327:17;;;:12;;;:17;;;;;;;:39;2380:11;;2065:435;2458:5;2422:3;:12;;2446:1;2435:8;:12;2422:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;;;6572:140;6649:4;6672:33;6680:3;6700;6672:7;:33::i;718:610:16:-;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:16;;;1270:51;-1:-1:-1;;718:610:16:o;2674:1517:17:-;2738:4;2871:17;;;:12;;;:17;;;;;;2903:13;;2899:1286;;3329:19;;-1:-1:-1;;3283:12:17;;;;3329:23;;;;3259:21;;3329:3;;:23;;3621;;;;;;;;;;;;;;;;3592:52;;3766:9;3736:3;:12;;3749:13;3736:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3854:14;;3841:28;;:12;;;:28;;;;;3872:17;;;3841:48;;3995:18;;3841:3;;3995:18;;;;;;;;;;;;;;-1:-1:-1;;3995:18:17;;;;;;;;;;;;;;;;;;;;;4088:17;;;:12;;;:17;;;;;;4081:24;;;;3995:18;-1:-1:-1;4120:11:17;;-1:-1:-1;;;;4120:11:17;81:3573:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;81:3573:2;;;-1:-1:-1;81:3573:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;81:3573:2;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;81:3573:2;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;81:3573:2;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;81:3573:2;;;;;;-1:-1:-1;;;;;81:3573:2;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;81:3573:2;-1:-1:-1;;;;;81:3573:2;;;;;;;;;;;-1:-1:-1;81:3573:2;;;;;;;-1:-1:-1;81:3573:2;;;-1:-1:-1;81:3573:2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;81:3573:2;;;;;;;5:130:-1;72:20;;-1:-1;;;;;57352:54;;60646:35;;60636:2;;60695:1;;60685:12;961:440;;1062:3;1055:4;1047:6;1043:17;1039:27;1029:2;;-1:-1;;1070:12;1029:2;1117:6;1104:20;53603:18;;53595:6;53592:30;53589:2;;;-1:-1;;53625:12;53589:2;53259;53253:9;53698;53679:17;;-1:-1;;53675:33;53285:17;;53766:4;53285:17;53345:34;;;53381:22;;;53342:62;53339:2;;;-1:-1;;53407:12;53339:2;53259;53426:22;1209:21;;;1130:73;-1:-1;1130:73;1309:16;;;53766:4;1309:16;1306:25;-1:-1;1303:2;;;1344:1;;1334:12;1303:2;58855:6;53766:4;1251:6;1247:17;53766:4;1285:5;1281:16;58832:30;58911:1;53766:4;58902:6;1285:5;58893:16;;58886:27;;;;1022:379;;;;;1997:241;;2101:2;2089:9;2080:7;2076:23;2072:32;2069:2;;;-1:-1;;2107:12;2069:2;2169:53;2214:7;2190:22;2169:53;;2245:366;;;2366:2;2354:9;2345:7;2341:23;2337:32;2334:2;;;-1:-1;;2372:12;2334:2;2434:53;2479:7;2455:22;2434:53;;;2424:63;;2542:53;2587:7;2524:2;2567:9;2563:22;2542:53;;;2532:63;;2328:283;;;;;;2618:491;;;;2756:2;2744:9;2735:7;2731:23;2727:32;2724:2;;;-1:-1;;2762:12;2724:2;85:6;72:20;97:33;124:5;97:33;;;2814:63;-1:-1;2914:2;2953:22;;72:20;97:33;72:20;97:33;;;2718:391;;2922:63;;-1:-1;;;3022:2;3061:22;;;;1927:20;;2718:391;3116:721;;;;;3280:3;3268:9;3259:7;3255:23;3251:33;3248:2;;;-1:-1;;3287:12;3248:2;3349:53;3394:7;3370:22;3349:53;;;3339:63;;3457:53;3502:7;3439:2;3482:9;3478:22;3457:53;;;3447:63;;3547:2;3590:9;3586:22;1927:20;3555:63;;3683:2;3672:9;3668:18;3655:32;3707:18;3699:6;3696:30;3693:2;;;-1:-1;;3729:12;3693:2;3759:62;3813:7;3804:6;3793:9;3789:22;3759:62;;;3749:72;;;3242:595;;;;;;;;3844:360;;;3962:2;3950:9;3941:7;3937:23;3933:32;3930:2;;;-1:-1;;3968:12;3930:2;4030:53;4075:7;4051:22;4030:53;;;4020:63;;4120:2;4160:9;4156:22;206:20;60792:5;57780:13;57773:21;60770:5;60767:32;60757:2;;-1:-1;;60803:12;60757:2;4128:60;;;;3924:280;;;;;;4211:366;;;4332:2;4320:9;4311:7;4307:23;4303:32;4300:2;;;-1:-1;;4338:12;4300:2;4400:53;4445:7;4421:22;4400:53;;;4390:63;4490:2;4529:22;;;;1927:20;;-1:-1;;;4294:283;4584:263;;4699:2;4687:9;4678:7;4674:23;4670:32;4667:2;;;-1:-1;;4705:12;4667:2;-1:-1;488:13;;4661:186;-1:-1;4661:186;4854:364;;;4974:2;4962:9;4953:7;4949:23;4945:32;4942:2;;;-1:-1;;4980:12;4942:2;353:6;340:20;5032:63;;5132:2;5174:9;5170:22;617:20;642:32;668:5;642:32;;5225:239;;5328:2;5316:9;5307:7;5303:23;5299:32;5296:2;;;-1:-1;;5334:12;5296:2;630:6;617:20;642:32;668:5;642:32;;5471:261;;5585:2;5573:9;5564:7;5560:23;5556:32;5553:2;;;-1:-1;;5591:12;5553:2;769:6;763:13;781:32;807:5;781:32;;5739:347;;5853:2;5841:9;5832:7;5828:23;5824:32;5821:2;;;-1:-1;;5859:12;5821:2;5917:17;5904:31;5955:18;5947:6;5944:30;5941:2;;;-1:-1;;5977:12;5941:2;6007:63;6062:7;6053:6;6042:9;6038:22;6007:63;;6093:719;;;;;6256:3;6244:9;6235:7;6231:23;6227:33;6224:2;;;-1:-1;;6263:12;6224:2;6321:17;6308:31;6359:18;6351:6;6348:30;6345:2;;;-1:-1;;6381:12;6345:2;6411:63;6466:7;6457:6;6446:9;6442:22;6411:63;;;6401:73;-1:-1;;6511:2;6549:22;;891:20;-1:-1;;;;;;58097:78;;61133:34;;61123:2;;-1:-1;;61171:12;61123:2;6519:62;-1:-1;6618:2;6657:22;;340:20;;-1:-1;6726:2;6764:22;;617:20;642:32;617:20;642:32;;;6218:594;;;;-1:-1;6218:594;;-1:-1;;6218:594;6819:241;;6923:2;6911:9;6902:7;6898:23;6894:32;6891:2;;;-1:-1;;6929:12;6891:2;-1:-1;1927:20;;6885:175;-1:-1;6885:175;7067:615;;;;;7221:3;7209:9;7200:7;7196:23;7192:33;7189:2;;;-1:-1;;7228:12;7189:2;1940:6;1927:20;7280:63;;7380:2;7423:9;7419:22;72:20;97:33;124:5;97:33;;8766:690;;8959:5;55061:12;56384:6;56379:3;56372:19;56421:4;;56416:3;56412:14;8971:93;;56421:4;9135:5;54232:14;-1:-1;9174:260;9199:6;9196:1;9193:13;9174:260;;;9260:13;;-1:-1;;;;;57352:54;8289:45;;7843:14;;;;55888;;;;57363:42;9214:9;9174:260;;;-1:-1;9440:10;;8890:566;-1:-1;;;;;8890:566;9495:709;;9682:5;55208:12;56384:6;56379:3;56372:19;56421:4;;56416:3;56412:14;9694:93;;54395:3;-1:-1;54385:14;56421:4;-1:-1;54414:18;-1:-1;9894:288;9919:6;9916:1;9913:13;9894:288;;;60101:11;;-1:-1;;;;;57352:54;8289:45;;7843:14;;;;57363:42;56000:14;;;;9934:9;9894:288;;10243:690;;10436:5;55061:12;56384:6;56379:3;56372:19;56421:4;;56416:3;56412:14;10448:93;;56421:4;10612:5;54232:14;-1:-1;10651:260;10676:6;10673:1;10670:13;10651:260;;;10737:13;;11861:37;;8025:14;;;;55888;;;;10698:1;10691:9;10651:260;;10972:709;;11159:5;55208:12;56384:6;56379:3;56372:19;56421:4;;56416:3;56412:14;11171:93;;54395:3;-1:-1;54385:14;56421:4;-1:-1;54414:18;-1:-1;11371:288;11396:6;11393:1;11390:13;11371:288;;;60246:11;;11861:37;;8025:14;;;;11418:1;56000:14;;;;11411:9;11371:288;;12331:343;;12473:5;55061:12;56384:6;56379:3;56372:19;12566:52;12611:6;56421:4;56416:3;56412:14;56421:4;12592:5;12588:16;12566:52;;;53698:9;60338:14;-1:-1;;60334:28;12630:39;;;;56421:4;12630:39;;12421:253;-1:-1;;12421:253;27334:495;27550:23;;11861:37;;27735:4;27724:16;;;27718:23;-1:-1;;;;;;57946:78;27793:14;;12128:36;27452:377;28225:378;-1:-1;;;;;;58097:78;;;;12263:56;;28465:1;28456:11;;11861:37;28566:12;;;28358:245;28610:262;;12841:5;55061:12;12952:52;12997:6;12992:3;12985:4;12978:5;12974:16;12952:52;;;13016:16;;;;;28735:137;-1:-1;;28735:137;28879:421;;-1:-1;14783:5;14777:12;14817:1;;14806:9;14802:17;14830:1;14825:268;;;;15104:1;15099:425;;;;14795:729;;14825:268;-1:-1;;15030:25;;15018:38;;14899:1;14884:17;;14903:4;14880:28;15070:16;;;-1:-1;14825:268;;15099:425;15168:1;15157:9;15153:17;54395:3;-1:-1;54385:14;54427:4;;-1:-1;54414:18;-1:-1;15357:130;15371:6;15368:1;15365:13;15357:130;;;15430:14;;15417:11;;;15410:35;15464:15;;;;15386:12;;15357:130;;;-1:-1;;;15501:16;;;-1:-1;14795:729;;;;12841:5;55061:12;12952:52;12997:6;12992:3;12985:4;12978:5;12974:16;12952:52;;;13016:16;;29051:249;-1:-1;;;;29051:249;29307:383;11861:37;;;60449:2;60445:14;-1:-1;;60445:14;29551:2;29542:12;;8665:58;29653:12;;;29442:248;29697:522;11861:37;;;-1:-1;;60449:2;60445:14;;;;;29969:2;29960:12;;8665:58;60445:14;;;30071:12;;;8665:58;30182:12;;;29860:359;30226:213;-1:-1;;;;;57352:54;;;;8289:45;;30344:2;30329:18;;30315:124;30446:663;-1:-1;;;;;57352:54;;;8289:45;;57352:54;;30863:2;30848:18;;8289:45;30946:2;30931:18;;11861:37;;;30682:3;30983:2;30968:18;;30961:48;;;30446:663;;31023:76;;30667:19;;31085:6;31023:76;;;31015:84;30653:456;-1:-1;;;;;;30653:456;31116:831;-1:-1;;;;;57352:54;;;8289:45;;57352:54;;31577:2;31562:18;;8289:45;31412:3;31614:2;31599:18;;31592:48;;;31116:831;;31654:105;;31397:19;;31745:6;31654:105;;;31807:9;31801:4;31797:20;31792:2;31781:9;31777:18;31770:48;31832:105;31932:4;31923:6;31832:105;;;31824:113;31383:564;-1:-1;;;;;;;31383:564;31954:659;;32192:2;32181:9;32177:18;57363:42;;;;;8327:5;57352:54;8296:3;8289:45;32310:2;32192;32310;32299:9;32295:18;32288:48;-1:-1;13909:5;13903:12;13943:1;;13932:9;13928:17;13956:1;13951:248;;;;14210:1;14205:402;;;;13921:686;;13951:248;14048:71;14029:4;14025:1;14014:9;14010:17;14006:28;14107:3;14048:71;;;-1:-1;;14138:25;;14126:38;;14178:14;;;-1:-1;13951:248;;14205:402;14274:1;14263:9;14259:17;14290:71;14354:6;14349:3;14290:71;;;14383:38;14415:5;14383:38;;;-1:-1;14445:130;14459:6;14456:1;14453:13;14445:130;;;14518:14;;14505:11;;;14498:35;14552:15;;;;14474:12;;14445:130;;;14589:11;;;;;-1:-1;;;13921:686;;;;32473:9;32467:4;32463:20;32458:2;32447:9;32443:18;32436:48;32498:105;32598:4;32589:6;32498:105;;;32490:113;32163:450;-1:-1;;;;;;;;32163:450;32620:361;;32788:2;32809:17;32802:47;32863:108;32788:2;32777:9;32773:18;32957:6;32863:108;;32988:361;;33156:2;33177:17;33170:47;33231:108;33156:2;33145:9;33141:18;33325:6;33231:108;;33356:355;;33521:2;33542:17;33535:47;33596:105;33521:2;33510:9;33506:18;33687:6;33596:105;;33718:201;57780:13;;57773:21;11754:34;;33830:2;33815:18;;33801:118;33926:300;57780:13;;57773:21;11754:34;;57780:13;57773:21;34212:2;34197:18;;11754:34;34060:2;34045:18;;34031:195;34233:301;;34371:2;34392:17;34385:47;34446:78;34371:2;34360:9;34356:18;34510:6;34446:78;;34541:560;;34757:2;34778:17;34771:47;34832:78;34757:2;34746:9;34742:18;34896:6;34832:78;;;34958:9;34952:4;34948:20;34943:2;34932:9;34928:18;34921:48;34983:108;35086:4;35077:6;34983:108;;;34975:116;34728:373;-1:-1;;;;;34728:373;35108:407;35299:2;35313:47;;;15763:2;35284:18;;;56372:19;15799:34;56412:14;;;15779:55;-1:-1;;;15854:12;;;15847:32;15898:12;;;35270:245;35522:407;35713:2;35727:47;;;16149:2;35698:18;;;56372:19;16185:34;56412:14;;;16165:55;-1:-1;;;16240:12;;;16233:26;16278:12;;;35684:245;35936:407;36127:2;36141:47;;;16529:2;36112:18;;;56372:19;16565:27;56412:14;;;16545:48;16612:12;;;36098:245;36350:407;36541:2;36555:47;;;16863:2;36526:18;;;56372:19;16899:34;56412:14;;;16879:55;-1:-1;;;16954:12;;;16947:42;17008:12;;;36512:245;36764:407;36955:2;36969:47;;;17259:2;36940:18;;;56372:19;17295:34;56412:14;;;17275:55;-1:-1;;;17350:12;;;17343:30;17392:12;;;36926:245;37178:407;37369:2;37383:47;;;17643:2;37354:18;;;56372:19;17679:30;56412:14;;;17659:51;17729:12;;;37340:245;37592:407;37783:2;37797:47;;;17980:2;37768:18;;;56372:19;18016:29;56412:14;;;17996:50;18065:12;;;37754:245;38006:407;38197:2;38211:47;;;18316:2;38182:18;;;56372:19;18352:34;56412:14;;;18332:55;-1:-1;;;18407:12;;;18400:40;18459:12;;;38168:245;38420:407;38611:2;38625:47;;;18710:2;38596:18;;;56372:19;18746:34;56412:14;;;18726:55;-1:-1;;;18801:12;;;18794:28;18841:12;;;38582:245;38834:407;39025:2;39039:47;;;19092:2;39010:18;;;56372:19;19128:27;56412:14;;;19108:48;19175:12;;;38996:245;39248:407;39439:2;39453:47;;;19426:2;39424:18;;;56372:19;19462:26;56412:14;;;19442:47;19508:12;;;39410:245;39662:407;39853:2;39867:47;;;19759:2;39838:18;;;56372:19;19795:34;56412:14;;;19775:55;-1:-1;;;19850:12;;;19843:36;19898:12;;;39824:245;40076:407;40267:2;40281:47;;;20149:2;40252:18;;;56372:19;20185:25;56412:14;;;20165:46;20230:12;;;40238:245;40490:407;40681:2;40695:47;;;20481:2;40666:18;;;56372:19;20517:25;56412:14;;;20497:46;20562:12;;;40652:245;40904:407;41095:2;41109:47;;;20813:2;41080:18;;;56372:19;20849:34;56412:14;;;20829:55;20918:26;20904:12;;;20897:48;20964:12;;;41066:245;41318:407;41509:2;41523:47;;;21215:2;41494:18;;;56372:19;21251:34;56412:14;;;21231:55;-1:-1;;;21306:12;;;21299:34;21352:12;;;41480:245;41732:407;41923:2;41937:47;;;21603:2;41908:18;;;56372:19;21639:34;56412:14;;;21619:55;-1:-1;;;21694:12;;;21687:31;21737:12;;;41894:245;42146:407;42337:2;42351:47;;;21988:2;42322:18;;;56372:19;22024:34;56412:14;;;22004:55;-1:-1;;;22079:12;;;22072:26;22117:12;;;42308:245;42560:407;42751:2;42765:47;;;42736:18;;;56372:19;22404:34;56412:14;;;22384:55;22458:12;;;42722:245;42974:407;43165:2;43179:47;;;22709:2;43150:18;;;56372:19;22745:34;56412:14;;;22725:55;-1:-1;;;22800:12;;;22793:36;22848:12;;;43136:245;43388:407;43579:2;43593:47;;;43564:18;;;56372:19;23135:34;56412:14;;;23115:55;23189:12;;;43550:245;43802:407;43993:2;44007:47;;;23440:2;43978:18;;;56372:19;23476:34;56412:14;;;23456:55;-1:-1;;;23531:12;;;23524:43;23586:12;;;43964:245;44216:407;44407:2;44421:47;;;23837:2;44392:18;;;56372:19;23873:34;56412:14;;;23853:55;-1:-1;;;23928:12;;;23921:33;23973:12;;;44378:245;44630:407;44821:2;44835:47;;;24224:2;44806:18;;;56372:19;24260:28;56412:14;;;24240:49;24308:12;;;44792:245;45044:407;45235:2;45249:47;;;24559:2;45220:18;;;56372:19;24595:34;56412:14;;;24575:55;-1:-1;;;24650:12;;;24643:39;24701:12;;;45206:245;45458:407;45649:2;45663:47;;;24952:2;45634:18;;;56372:19;24988:34;56412:14;;;24968:55;-1:-1;;;25043:12;;;25036:25;25080:12;;;45620:245;45872:407;46063:2;46077:47;;;25331:2;46048:18;;;56372:19;-1:-1;;;56412:14;;;25347:42;25408:12;;;46034:245;46286:407;46477:2;46491:47;;;25659:2;46462:18;;;56372:19;25695:34;56412:14;;;25675:55;-1:-1;;;25750:12;;;25743:41;25803:12;;;46448:245;46700:407;46891:2;46905:47;;;26054:2;46876:18;;;56372:19;26090:34;56412:14;;;26070:55;-1:-1;;;26145:12;;;26138:33;26190:12;;;46862:245;47114:407;47305:2;47319:47;;;26441:2;47290:18;;;56372:19;26477:34;56412:14;;;26457:55;-1:-1;;;26532:12;;;26525:33;26577:12;;;47276:245;47528:407;47719:2;47733:47;;;26828:2;47704:18;;;56372:19;26864:30;56412:14;;;26844:51;26914:12;;;47690:245;47942:407;48133:2;48147:47;;;27165:2;48118:18;;;56372:19;-1:-1;;;56412:14;;;27181:45;27245:12;;;48104:245;48356:317;48526:2;48511:18;;48540:123;48515:9;48636:6;48540:123;;48680:428;48878:2;48863:18;;48892:123;48867:9;48988:6;48892:123;;;11891:5;49094:2;49083:9;49079:18;11861:37;48849:259;;;;;;49115:213;11861:37;;;49233:2;49218:18;;49204:124;49335:640;11861:37;;;-1:-1;;;;;57352:54;;49748:2;49733:18;;8289:45;49583:3;49568:19;;49763:124;49883:2;49868:18;;49859:6;49763:124;;;11781:5;57780:13;57773:21;49960:3;49949:9;49945:19;11754:34;49554:421;;;;;;;;49982:324;11861:37;;;50292:2;50277:18;;11861:37;50128:2;50113:18;;50099:207;50313:1583;;50821:3;11891:5;11868:3;11861:37;11891:5;50986:2;50975:9;50971:18;11861:37;50821:3;51023:2;51012:9;51008:18;51001:48;51063:108;50821:3;50810:9;50806:19;51157:6;51063:108;;;51182:124;51302:2;51291:9;51287:18;51278:6;51182:124;;;51355:9;51349:4;51345:20;51339:3;51328:9;51324:19;51317:49;51380:78;51453:4;51444:6;51380:78;;;-1:-1;;;;;57352:54;;;51537:3;51522:19;;8289:45;57352:54;;51621:3;51606:19;;8289:45;51665:20;;;51659:3;51644:19;;51637:49;51372:86;-1:-1;51700:108;;-1:-1;51372:86;51794:6;51700:108;;;51692:116;;;11781:5;57780:13;57773:21;51881:3;51870:9;51866:19;11754:34;50792:1104;;;;;;;;;;;;;51903:1287;;52343:3;11891:5;11868:3;11861:37;11891:5;52508:2;52497:9;52493:18;11861:37;11891:5;52591:2;52580:9;52576:18;11861:37;52606:124;52726:2;52715:9;52711:18;52702:6;52606:124;;;-1:-1;;;;;57352:54;;57363:42;52802:19;;8132:58;52855:3;52840:19;;52833:49;;;52896:105;52328:19;;;52987:6;52896:105;;;53050:9;53044:4;53040:20;53034:3;53023:9;53019:19;53012:49;53075:105;53175:4;53166:6;53075:105;;;53067:113;52314:876;-1:-1;;;;;;;;;;;52314:876;54275:173;;54385:14;;;54427:4;54414:18;;;54344:104;58928:268;58993:1;59000:101;59014:6;59011:1;59008:13;59000:101;;;59081:11;;;59075:18;59062:11;;;59055:39;59036:2;59029:10;59000:101;;;59116:6;59113:1;59110:13;59107:2;;;-1:-1;;58993:1;59163:16;;59156:27;58977:219;60587:117;-1:-1;;;;;57352:54;;60646:35;;60636:2;;60695:1;;60685:12;60953:115;-1:-1;;;;;;57946:78;;61011:34;;61001:2;;61059:1;;61049:12",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./DMCT.sol\";\n\ncontract DMCTServices is DMCT {\n    function returnAssetIDS() public view returns (uint256[] memory assetIDS) {\n        assetIDS = AssetIDS;\n    }\n\n    function returnUserByAddress(address userAddress)\n        public\n        view\n        returns (string memory userName, uint256[] memory portfolio)\n    {\n        userName = addressToUser[userAddress].userName;\n        portfolio = addressToUser[userAddress].portfolio;\n    }\n\n    function checkBalance(address owner) public view returns (uint256 balance) {\n        balance = Models.balance(owner);\n    }\n\n    function checkOwnerOfToken(uint256 tokenID)\n        public\n        view\n        returns (address owner)\n    {\n        if (tokenID > LI) {\n            owner = LIDToLicense[tokenID].licenseOwner;\n        } else {\n            owner = ownerOfToken(tokenID);\n        }\n    }\n\n    function checkTokenStatus(uint256 tokenID)\n        public\n        view\n        returns (bool status)\n    {\n        status = Models.exists(tokenID);\n    }\n\n    function checkOwnerStatus(address owner, uint256 tokenID)\n        public\n        view\n        returns (bool status)\n    {\n        status = Models.isApprovedOrOwner(owner, tokenID);\n    }\n\n    function checkLicenseStatus(uint256 licenseID)\n        public\n        view\n        returns (bool tokenStatus, bool licenseStatus)\n    {\n        tokenStatus = Models.exists(licenseID);\n        licenseStatus = LIDToLicense[licenseID].status;\n    }\n\n    function returnCertificateURL(uint256 certificateID)\n        public\n        view\n        returns (IpfsHash memory URL, uint256 assetID)\n    {\n        URL = CIDToCertificate[certificateID].url;\n        assetID = CIDToCertificate[certificateID].assetID;\n    }\n\n    function returnCertificate(uint256 certificateID)\n        public\n        view\n        returns (\n            uint256 index,\n            uint256 assetID, //AID\n            uint256[] memory licenses,\n            IpfsHash memory url,\n            string memory title,\n            address creator,\n            address owner,\n            address[] memory ownershipHistory,\n            bool status\n        )\n    {\n        index = CIDToCertificate[certificateID].index;\n        assetID = CIDToCertificate[certificateID].assetID;\n        licenses = CIDToCertificate[certificateID].licenses;\n        url = CIDToCertificate[certificateID].url;\n        title = CIDToCertificate[certificateID].title;\n        creator = CIDToCertificate[certificateID].certificateCreator;\n        owner = CIDToCertificate[certificateID].certificateOwner;\n        ownershipHistory = CIDToCertificate[certificateID].ownershipHistory;\n        status = CIDToCertificate[certificateID].status;\n    }\n\n    function returnLicense(uint256 licenseID)\n        public\n        view\n        returns (\n            uint256 index,\n            address licenseOwner,\n            IpfsHash memory url,\n            bool status\n        )\n    {\n        index = LIDToLicense[licenseID].index;\n        licenseOwner = LIDToLicense[licenseID].licenseOwner;\n        url = LIDToLicense[licenseID].url;\n        status = LIDToLicense[licenseID].status;\n    }\n\n    function returnLicenseOwnerArray(uint256 certificateID)\n        public\n        view\n        returns (address[] memory ownersArray)\n    {\n        uint256 licenseCount = CIDToCertificate[certificateID].licenses.length;\n        ownersArray = new address[](licenseCount);\n        for (uint256 i = 0; i < licenseCount; i++) {\n            ownersArray[i] = LIDToLicense[CIDToCertificate[certificateID]\n                .licenses[i]]\n                .licenseOwner;\n        }\n    }\n}\n",
  "sourcePath": "C:\\MyData\\Projects\\Portfolio\\dmct\\contracts\\DMCT\\DMCTServices.sol",
  "ast": {
    "absolutePath": "/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCTServices.sol",
    "exportedSymbols": {
      "DMCTServices": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 830,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 831,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:2"
      },
      {
        "absolutePath": "/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCT.sol",
        "file": "./DMCT.sol",
        "id": 832,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 829,
        "src": "59:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 833,
              "name": "DMCT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 828,
              "src": "106:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DMCT_$828",
                "typeString": "contract DMCT"
              }
            },
            "id": 834,
            "nodeType": "InheritanceSpecifier",
            "src": "106:4:2"
          }
        ],
        "contractDependencies": [
          120,
          828,
          1233,
          1774,
          1801,
          1904,
          1957,
          1967,
          3073,
          3176,
          3203,
          3226
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          828,
          120,
          1774,
          1233,
          1904,
          3073,
          3203,
          3226,
          3176,
          1957,
          1967,
          1801
        ],
        "name": "DMCTServices",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "191:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 840,
                      "name": "assetIDS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "201:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 841,
                      "name": "AssetIDS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "212:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "201:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "201:19:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fef9fe5c",
            "id": 845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnAssetIDS",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:2:2"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "name": "assetIDS",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 845,
                  "src": "164:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 836,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "164:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 837,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "164:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:27:2"
            },
            "scope": 1176,
            "src": "117:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "384:121:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 855,
                      "name": "userName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "394:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 856,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "405:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1344_storage_$",
                            "typeString": "mapping(address => struct Models.User storage ref)"
                          }
                        },
                        "id": 858,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "419:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "405:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1344_storage",
                          "typeString": "struct Models.User storage ref"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1340,
                      "src": "405:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "394:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "394:46:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 862,
                      "name": "portfolio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "450:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 863,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "462:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1344_storage_$",
                            "typeString": "mapping(address => struct Models.User storage ref)"
                          }
                        },
                        "id": 865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 864,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "476:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "462:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1344_storage",
                          "typeString": "struct Models.User storage ref"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "portfolio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1343,
                      "src": "462:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "450:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "450:48:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "642db464",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnUserByAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "262:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:21:2"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "328:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "name": "portfolio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "352:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 851,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "352:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 852,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "352:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:52:2"
            },
            "scope": 1176,
            "src": "233:272:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "586:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "596:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 880,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "621:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 878,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "606:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1743,
                        "src": "606:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "606:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "596:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "596:31:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5f515226",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 885,
                  "src": "533:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:15:2"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 885,
                  "src": "569:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:17:2"
            },
            "scope": 1176,
            "src": "511:123:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "748:161:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 892,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "762:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 893,
                      "name": "LI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "772:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "849:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 903,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "863:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 905,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "884:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 904,
                              "name": "ownerOfToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "871:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "871:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "863:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "863:29:2"
                      }
                    ]
                  },
                  "id": 910,
                  "nodeType": "IfStatement",
                  "src": "758:145:2",
                  "trueBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "776:67:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 895,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "790:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 896,
                                "name": "LIDToLicense",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "798:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                                  "typeString": "mapping(uint256 => struct Models.License storage ref)"
                                }
                              },
                              "id": 898,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "811:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "798:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_License_$1364_storage",
                                "typeString": "struct Models.License storage ref"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licenseOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "798:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "790:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "790:42:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "30501180",
            "id": 912,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerOfToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 912,
                  "src": "667:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "666:17:2"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 912,
                  "src": "729:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:15:2"
            },
            "scope": 1176,
            "src": "640:269:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1020:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 919,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "1030:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 914,
                          "src": "1053:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 920,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1039:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1758,
                        "src": "1039:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1039:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1030:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:31:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "987c389b",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTokenStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 927,
                  "src": "941:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:17:2"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 927,
                  "src": "1003:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:13:2"
            },
            "scope": 1176,
            "src": "915:153:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "1194:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 936,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "1204:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 939,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "1238:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "1245:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 937,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1213:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isApprovedOrOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1728,
                        "src": "1213:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1213:40:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1204:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:49:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "947c1bb4",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1100:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 931,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1115:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:32:2"
            },
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1177:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:13:2"
            },
            "scope": 1176,
            "src": "1074:186:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1400:111:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 954,
                      "name": "tokenStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "1410:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 957,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "1438:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 955,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1424:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1758,
                        "src": "1424:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1410:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 961,
                      "name": "licenseStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "1458:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 962,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "1474:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 964,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 963,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "1487:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1474:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "1474:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1458:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:46:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6151d0fb",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkLicenseStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "name": "licenseID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1294:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1293:19:2"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 950,
                  "name": "tokenStatus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1358:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "name": "licenseStatus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1376:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1357:38:2"
            },
            "scope": 1176,
            "src": "1266:245:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "1657:117:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 978,
                      "name": "URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "1667:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 979,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1673:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 980,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "1690:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1673:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "1673:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "1667:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 985,
                      "name": "assetID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "1718:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 986,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1728:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 987,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "1745:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1728:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assetID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "1728:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1718:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:49:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a11e2375",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCertificateURL",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1547:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1546:23:2"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 974,
                  "name": "URL",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1615:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 973,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "1615:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "name": "assetID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1636:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:38:2"
            },
            "scope": 1176,
            "src": "1517:257:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1081,
              "nodeType": "Block",
              "src": "2184:558:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "2194:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1019,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2202:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1021,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1020,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2219:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2202:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "2202:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2194:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1025,
                      "name": "assetID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2249:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1026,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2259:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1028,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1027,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2276:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2259:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assetID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "2259:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2249:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1032,
                      "name": "licenses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "2308:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1033,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2319:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1035,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1034,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2336:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2319:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "2319:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "2308:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "2369:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2375:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1042,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1041,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2392:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2375:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "2375:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "2369:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1046,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "2420:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1047,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2428:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1049,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1048,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2445:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2428:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1377,
                      "src": "2428:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2420:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1053,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "2475:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1054,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2485:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1056,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1055,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2502:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2485:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certificateCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1379,
                      "src": "2485:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2475:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1060,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "2545:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1061,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2553:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1063,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1062,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2570:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2553:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certificateOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1381,
                      "src": "2553:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2545:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:56:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1067,
                      "name": "ownershipHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2611:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1068,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2630:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1070,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1069,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2647:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2630:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownershipHistory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "2630:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "src": "2611:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "2611:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1074,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "2688:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2697:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1077,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1076,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2714:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2697:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1386,
                      "src": "2697:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2688:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:47:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1668d769",
            "id": 1082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCertificate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1807:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1806:23:2"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1888:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "assetID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1915:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "name": "licenses",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1950:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1001,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1950:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1002,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1950:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "name": "url",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1989:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1004,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "1989:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2022:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2055:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1011,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2084:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "name": "ownershipHistory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2111:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1012,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2111:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1013,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2111:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2158:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1874:305:2"
            },
            "scope": 1176,
            "src": "1780:962:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "2968:207:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1095,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "2978:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1096,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "2986:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1098,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1097,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "2999:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2986:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1355,
                      "src": "2986:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2978:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1102,
                      "name": "licenseOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "3025:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1103,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3040:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1105,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3053:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3040:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "3040:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3025:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1109,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "3086:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1110,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3092:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1112,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1111,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3105:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3092:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3092:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "3086:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:33:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1116,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "3129:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1117,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3138:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1119,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1118,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3151:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3138:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "3138:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3129:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:39:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "37c14a79",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLicense",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "name": "licenseID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2771:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2770:19:2"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2848:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "name": "licenseOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2875:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1091,
                  "name": "url",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2909:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1090,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "2909:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1093,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2942:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2834:129:2"
            },
            "scope": 1176,
            "src": "2748:427:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "3316:336:2",
              "statements": [
                {
                  "assignments": [
                    1133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1133,
                      "name": "licenseCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1174,
                      "src": "3326:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3326:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1139,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1134,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3349:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1136,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1135,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1126,
                          "src": "3366:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3349:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "3349:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3349:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3326:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1140,
                      "name": "ownersArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "3406:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1144,
                          "name": "licenseCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1133,
                          "src": "3434:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3420:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3424:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1142,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "3424:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3420:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3406:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:41:2"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "3500:146:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1158,
                              "name": "ownersArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "3514:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1160,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1159,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1149,
                              "src": "3526:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3514:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1161,
                                "name": "LIDToLicense",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "3531:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                                  "typeString": "mapping(uint256 => struct Models.License storage ref)"
                                }
                              },
                              "id": 1168,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1162,
                                      "name": "CIDToCertificate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "3544:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                                        "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                                      }
                                    },
                                    "id": 1164,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1163,
                                      "name": "certificateID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1126,
                                      "src": "3561:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3544:31:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                                      "typeString": "struct Models.Certificate storage ref"
                                    }
                                  },
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "licenses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1373,
                                  "src": "3544:57:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1167,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1166,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1149,
                                  "src": "3602:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3544:60:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3531:74:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_License_$1364_storage",
                                "typeString": "struct Models.License storage ref"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licenseOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "3531:104:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3514:121:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "3514:121:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1152,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "3477:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1153,
                      "name": "licenseCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
                      "src": "3481:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3477:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "initializationExpression": {
                    "assignments": [
                      1149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1149,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1173,
                        "src": "3462:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3462:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1151,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3474:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3462:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3495:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3495:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1157,
                    "nodeType": "ExpressionStatement",
                    "src": "3495:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3457:189:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a6e370db",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLicenseOwnerArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "3214:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3213:23:2"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "name": "ownersArray",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "3282:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1128,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3282:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1129,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3282:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3281:30:2"
            },
            "scope": 1176,
            "src": "3181:471:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "81:3573:2"
      }
    ],
    "src": "0:3655:2"
  },
  "legacyAST": {
    "absolutePath": "/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCTServices.sol",
    "exportedSymbols": {
      "DMCTServices": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 830,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "id": 831,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:2"
      },
      {
        "absolutePath": "/C/MyData/Projects/Portfolio/dmct/contracts/DMCT/DMCT.sol",
        "file": "./DMCT.sol",
        "id": 832,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 829,
        "src": "59:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 833,
              "name": "DMCT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 828,
              "src": "106:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DMCT_$828",
                "typeString": "contract DMCT"
              }
            },
            "id": 834,
            "nodeType": "InheritanceSpecifier",
            "src": "106:4:2"
          }
        ],
        "contractDependencies": [
          120,
          828,
          1233,
          1774,
          1801,
          1904,
          1957,
          1967,
          3073,
          3176,
          3203,
          3226
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          828,
          120,
          1774,
          1233,
          1904,
          3073,
          3203,
          3226,
          3176,
          1957,
          1967,
          1801
        ],
        "name": "DMCTServices",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "191:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 840,
                      "name": "assetIDS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "201:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 841,
                      "name": "AssetIDS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "212:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "201:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "201:19:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fef9fe5c",
            "id": 845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnAssetIDS",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:2:2"
            },
            "returnParameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "name": "assetIDS",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 845,
                  "src": "164:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 836,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "164:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 837,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "164:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:27:2"
            },
            "scope": 1176,
            "src": "117:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "384:121:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 855,
                      "name": "userName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "394:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 856,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "405:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1344_storage_$",
                            "typeString": "mapping(address => struct Models.User storage ref)"
                          }
                        },
                        "id": 858,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "419:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "405:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1344_storage",
                          "typeString": "struct Models.User storage ref"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1340,
                      "src": "405:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "394:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "394:46:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 862,
                      "name": "portfolio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "450:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 863,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1447,
                          "src": "462:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1344_storage_$",
                            "typeString": "mapping(address => struct Models.User storage ref)"
                          }
                        },
                        "id": 865,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 864,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "476:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "462:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1344_storage",
                          "typeString": "struct Models.User storage ref"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "portfolio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1343,
                      "src": "462:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "450:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "450:48:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "642db464",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnUserByAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "262:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:21:2"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "name": "userName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "328:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "name": "portfolio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 870,
                  "src": "352:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 851,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "352:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 852,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "352:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:52:2"
            },
            "scope": 1176,
            "src": "233:272:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "586:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "596:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 880,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "621:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 878,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "606:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1743,
                        "src": "606:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "606:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "596:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "596:31:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5f515226",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 885,
                  "src": "533:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:15:2"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 885,
                  "src": "569:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:17:2"
            },
            "scope": 1176,
            "src": "511:123:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "748:161:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 892,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "762:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 893,
                      "name": "LI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "772:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "762:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "849:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 903,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "863:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 905,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "884:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 904,
                              "name": "ownerOfToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1773,
                              "src": "871:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "871:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "863:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 908,
                        "nodeType": "ExpressionStatement",
                        "src": "863:29:2"
                      }
                    ]
                  },
                  "id": 910,
                  "nodeType": "IfStatement",
                  "src": "758:145:2",
                  "trueBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "776:67:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 895,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "790:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 896,
                                "name": "LIDToLicense",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "798:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                                  "typeString": "mapping(uint256 => struct Models.License storage ref)"
                                }
                              },
                              "id": 898,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 887,
                                "src": "811:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "798:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_License_$1364_storage",
                                "typeString": "struct Models.License storage ref"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licenseOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "798:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "790:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "790:42:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "30501180",
            "id": 912,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerOfToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 912,
                  "src": "667:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "666:17:2"
            },
            "returnParameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 912,
                  "src": "729:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:15:2"
            },
            "scope": 1176,
            "src": "640:269:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1020:48:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 919,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "1030:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 914,
                          "src": "1053:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 920,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1039:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1758,
                        "src": "1039:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1039:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1030:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:31:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "987c389b",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTokenStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 927,
                  "src": "941:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:17:2"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 927,
                  "src": "1003:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:13:2"
            },
            "scope": 1176,
            "src": "915:153:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "1194:66:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 936,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "1204:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 939,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "1238:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 931,
                          "src": "1245:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 937,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1213:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isApprovedOrOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1728,
                        "src": "1213:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1213:40:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1204:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:49:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "947c1bb4",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOwnerStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1100:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 931,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1115:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:32:2"
            },
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 945,
                  "src": "1177:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:13:2"
            },
            "scope": 1176,
            "src": "1074:186:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "1400:111:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 954,
                      "name": "tokenStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "1410:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 957,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "1438:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 955,
                          "name": "Models",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1424:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Models_$1774_$",
                            "typeString": "type(contract Models)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1758,
                        "src": "1424:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1410:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 961,
                      "name": "licenseStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "1458:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 962,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "1474:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 964,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 963,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "1487:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1474:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "1474:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1458:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:46:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6151d0fb",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkLicenseStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "name": "licenseID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1294:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1293:19:2"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 950,
                  "name": "tokenStatus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1358:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "name": "licenseStatus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 969,
                  "src": "1376:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1357:38:2"
            },
            "scope": 1176,
            "src": "1266:245:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "1657:117:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 978,
                      "name": "URL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "1667:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 979,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1673:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 981,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 980,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "1690:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1673:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "1673:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "1667:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 985,
                      "name": "assetID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "1718:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 986,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1728:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 988,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 987,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "1745:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1728:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assetID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "1728:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1718:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:49:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a11e2375",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCertificateURL",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1547:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1546:23:2"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 974,
                  "name": "URL",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1615:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 973,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "1615:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "name": "assetID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 993,
                  "src": "1636:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:38:2"
            },
            "scope": 1176,
            "src": "1517:257:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1081,
              "nodeType": "Block",
              "src": "2184:558:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "2194:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1019,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2202:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1021,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1020,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2219:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2202:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1366,
                      "src": "2202:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2194:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1025,
                      "name": "assetID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1000,
                      "src": "2249:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1026,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2259:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1028,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1027,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2276:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2259:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assetID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "2259:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2249:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1032,
                      "name": "licenses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "2308:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1033,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2319:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1035,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1034,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2336:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2319:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "2319:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "src": "2308:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "2369:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2375:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1042,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1041,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2392:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2375:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1375,
                      "src": "2375:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "2369:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1046,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "2420:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1047,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2428:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1049,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1048,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2445:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2428:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1377,
                      "src": "2428:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2420:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1053,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "2475:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1054,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2485:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1056,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1055,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2502:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2485:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certificateCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1379,
                      "src": "2485:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2475:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:60:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1060,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "2545:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1061,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2553:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1063,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1062,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2570:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2553:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "certificateOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1381,
                      "src": "2553:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2545:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:56:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1067,
                      "name": "ownershipHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2611:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1068,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2630:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1070,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1069,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2647:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2630:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownershipHistory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "2630:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "src": "2611:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "2611:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1074,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "2688:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2697:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1077,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1076,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "2714:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2697:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1386,
                      "src": "2697:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2688:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:47:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1668d769",
            "id": 1082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCertificate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 995,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1807:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1806:23:2"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1888:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "assetID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1915:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "name": "licenses",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1950:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1001,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1950:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1002,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1950:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "name": "url",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "1989:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1004,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "1989:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2022:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2055:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1011,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2084:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "name": "ownershipHistory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2111:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1012,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2111:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1013,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2111:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1082,
                  "src": "2158:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1874:305:2"
            },
            "scope": 1176,
            "src": "1780:962:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "2968:207:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1095,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "2978:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1096,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "2986:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1098,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1097,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "2999:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2986:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1355,
                      "src": "2986:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2978:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1102,
                      "name": "licenseOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "3025:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1103,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3040:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1105,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3053:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3040:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenseOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "3040:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3025:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1108,
                  "nodeType": "ExpressionStatement",
                  "src": "3025:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1109,
                      "name": "url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "3086:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                        "typeString": "struct IPFSEngine.IpfsHash memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1110,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3092:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1112,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1111,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3105:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3092:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "url",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "3092:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IpfsHash_$1184_storage",
                        "typeString": "struct IPFSEngine.IpfsHash storage ref"
                      }
                    },
                    "src": "3086:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash memory"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:33:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1116,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "3129:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1117,
                          "name": "LIDToLicense",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1431,
                          "src": "3138:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                            "typeString": "mapping(uint256 => struct Models.License storage ref)"
                          }
                        },
                        "id": 1119,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1118,
                          "name": "licenseID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "3151:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3138:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_License_$1364_storage",
                          "typeString": "struct Models.License storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "3138:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3129:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:39:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "37c14a79",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLicense",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "name": "licenseID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2771:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2770:19:2"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2848:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "name": "licenseOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2875:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1091,
                  "name": "url",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2909:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_IpfsHash_$1184_memory_ptr",
                    "typeString": "struct IPFSEngine.IpfsHash"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1090,
                    "name": "IpfsHash",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1184,
                    "src": "2909:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IpfsHash_$1184_storage_ptr",
                      "typeString": "struct IPFSEngine.IpfsHash"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1093,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1124,
                  "src": "2942:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2834:129:2"
            },
            "scope": 1176,
            "src": "2748:427:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "3316:336:2",
              "statements": [
                {
                  "assignments": [
                    1133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1133,
                      "name": "licenseCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1174,
                      "src": "3326:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3326:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1139,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1134,
                          "name": "CIDToCertificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "3349:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                            "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                          }
                        },
                        "id": 1136,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1135,
                          "name": "certificateID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1126,
                          "src": "3366:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3349:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                          "typeString": "struct Models.Certificate storage ref"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "licenses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "3349:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3349:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3326:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1140,
                      "name": "ownersArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "3406:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1144,
                          "name": "licenseCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1133,
                          "src": "3434:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3420:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3424:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1142,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "3424:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3420:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3406:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:41:2"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "3500:146:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1158,
                              "name": "ownersArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "3514:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1160,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1159,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1149,
                              "src": "3526:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3514:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1161,
                                "name": "LIDToLicense",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "3531:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_License_$1364_storage_$",
                                  "typeString": "mapping(uint256 => struct Models.License storage ref)"
                                }
                              },
                              "id": 1168,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1162,
                                      "name": "CIDToCertificate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "3544:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$1387_storage_$",
                                        "typeString": "mapping(uint256 => struct Models.Certificate storage ref)"
                                      }
                                    },
                                    "id": 1164,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1163,
                                      "name": "certificateID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1126,
                                      "src": "3561:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3544:31:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Certificate_$1387_storage",
                                      "typeString": "struct Models.Certificate storage ref"
                                    }
                                  },
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "licenses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1373,
                                  "src": "3544:57:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1167,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1166,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1149,
                                  "src": "3602:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3544:60:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3531:74:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_License_$1364_storage",
                                "typeString": "struct Models.License storage ref"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "licenseOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "3531:104:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3514:121:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "3514:121:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1152,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "3477:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1153,
                      "name": "licenseCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
                      "src": "3481:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3477:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "initializationExpression": {
                    "assignments": [
                      1149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1149,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1173,
                        "src": "3462:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3462:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1151,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3474:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3462:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3495:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3495:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1157,
                    "nodeType": "ExpressionStatement",
                    "src": "3495:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3457:189:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a6e370db",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnLicenseOwnerArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "name": "certificateID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "3214:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3213:23:2"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "name": "ownersArray",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "3282:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1128,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3282:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1129,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3282:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3281:30:2"
            },
            "scope": 1176,
            "src": "3181:471:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "81:3573:2"
      }
    ],
    "src": "0:3655:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xdb08a06eba245dbd34ffbd08b80e14e9acdd66a8ca6f8f1f035348ced6ef7dc7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "_hash",
              "type": "string"
            }
          ],
          "name": "DataStoredInTheLog",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd49a4d28bb10172ee9a78709bdbfc91750333ca9c9012b22136a0471efb975f7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "Licenses",
              "type": "uint256[]"
            }
          ],
          "name": "ReturnCertificateLicenses",
          "type": "event"
        },
        "0xd0269f6fd5d6d7503bdcb2ba2498d12e35613b699b28aef8f930c268b627afa7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "CID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "AID",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "multiHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes4",
                  "name": "multiHash_Function",
                  "type": "bytes4"
                }
              ],
              "indexed": false,
              "internalType": "struct IPFSEngine.IpfsHash",
              "name": "url",
              "type": "tuple"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "msgsender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "onwershipHistory",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "licenses",
              "type": "uint256[]"
            }
          ],
          "name": "ReturnCreateCertificate",
          "type": "event"
        },
        "0x1762e6485dad7c291ae8191119acded92bd07cda85e738e1e570a5949d5a264b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "portfolio",
              "type": "uint256[]"
            }
          ],
          "name": "ReturnCreateUser",
          "type": "event"
        },
        "0x486ba50ba1b2ac0157dc7c2b5bb2953cc5b90e298b682f197a4019d303de8366": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "tokenStatus",
              "type": "bool"
            }
          ],
          "name": "ReturnDestroyToken",
          "type": "event"
        },
        "0xad70efb6faf0745f98f66743197c2e122372a10573177c92191a9e85eb8a24db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "ReturnMessage",
          "type": "event"
        },
        "0xb980824ca9615efc2a4931640c07380d9e1ddabe014fee98672600f1e84db69e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "Number",
              "type": "uint256[]"
            }
          ],
          "name": "ReturnTestArrayData",
          "type": "event"
        },
        "0x97b7c9cb7bb176c0fb96877e03418b52ea0d7ba99071201ca2f3140b97451ccd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "Boolean",
              "type": "bool"
            }
          ],
          "name": "ReturnTestBoolData",
          "type": "event"
        },
        "0x22b9c755030da0a8df2943f4e8a7957fe52af38f8a3ca8f4e2deac88d3620152": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Number",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "String",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "Address",
              "type": "address"
            }
          ],
          "name": "ReturnTestData",
          "type": "event"
        },
        "0x118156733240272377b9f5489d38ded92256543bb9d43c8295ec716f0ece5039": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "ownershipHistory",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "licenses",
              "type": "uint256[]"
            }
          ],
          "name": "ReturnTransferCertificate",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x4893c8577e724f997ce2a66eaa3376f5921e8c449711fa299dadf3dc2b688a98": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "AssetID",
              "type": "uint256"
            }
          ],
          "name": "returnAID",
          "type": "event"
        },
        "0x7bb34176ea5c54ad2400ab070d5ea84ffa3016a701e16082f71d4ff48d004f34": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "CertificateID",
              "type": "uint256"
            }
          ],
          "name": "returnCID",
          "type": "event"
        },
        "0xa323dbc7f3cc04e17c7c12b5263e160308382919b308390323d16caf0c3d5304": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "LicenseID",
              "type": "uint256"
            }
          ],
          "name": "returnLID",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x70465EE1006C0F77E412950B1e83AaefB2F23A30",
      "transactionHash": "0x5b2aad40e9f727eaccfbcf181b832e673a448dee1c2148b3544821c2ce0204d9"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-12-08T03:05:34.476Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |===     * Requirements:     * - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}